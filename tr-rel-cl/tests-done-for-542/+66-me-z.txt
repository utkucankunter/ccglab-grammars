
* (ccg-deduce '(ahmet gel -me -z -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-Z) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
>     (-ME)(-Z) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
<     (GEL)(-ME -Z) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -ME -Z)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           (((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -ME -Z -AGR) := S
        : (((LAM P (LAM X (P X)))
            (((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
             (LAM X (COME X))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0 (LAM T0 (NOT ((EXISTS T) (((COME AHMET) W0) T))))) =
    (\ W0 . \ T0 . NOT (EXISTS T (COME AHMET W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)
