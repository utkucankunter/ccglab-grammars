
* (ccg-deduce '(ahmet gel -ir -se -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (COME X)))
             AHMET)))

Final LF, normal-order evaluated: 

    (LAM S
     (LAM W0
      (LAM T0
       ((FORALL W_REF)
        ((CONDITION ((EXISTS T) (((COME AHMET) W_REF) T))) ((S W_REF) T0)))))) =
    (\ S . \ W0 . \ T0 . FORALL W_REF
     (CONDITION (EXISTS T (COME AHMET W_REF T)) (S W_REF T0)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)
