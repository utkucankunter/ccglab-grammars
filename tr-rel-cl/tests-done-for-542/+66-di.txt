
* (ccg-deduce '(polis gel -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (GEL)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -DI)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            (LAM X (COME X))))
<     (POLIS)(GEL -DI -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             (LAM X (COME X))))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T)) (((COME POLICEMAN) W0) T))
        ((((KNOW (((COME POLICEMAN) W0) T)) SPEAKER) W0) T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T) (COME POLICEMAN W0 T)
      (KNOW (COME POLICEMAN W0 T) SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)
