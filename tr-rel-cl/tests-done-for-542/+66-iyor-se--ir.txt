
* (ccg-deduce '(ahmet gel -iyor -se -agr ben de gel -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -IYOR) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -IYOR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -IYOR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))
             AHMET)))
LEX   (BEN) := NP
        : SPEAKER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (BEN)(DE) := NP
        : ((LAM X X) SPEAKER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (COME X))))
<     (BEN DE)(GEL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (COME X))))
           ((LAM X X) SPEAKER))
>     (AHMET GEL -IYOR -SE -AGR)(BEN DE GEL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (COME X)))
              AHMET)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (COME X))))
            ((LAM X X) SPEAKER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
           (((COME AHMET) W_REF) (T1 T2)))))
        ((EXISTS T) (((COME SPEAKER) W_REF) T)))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T1 EXISTS T2
       (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W_REF (T1 T2))))
      (EXISTS T (COME SPEAKER W_REF T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)
