
* (ccg-deduce '(polis hırsızı konuş -dir -miş -agr -dir))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-MIŞ) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (KONUŞ -DIR)(-MIŞ) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (KONUŞ -DIR -MIŞ)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-DIR) := ((S\NP)\NP)\*((S\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM W0
              (LAM T0
               ((EXISTS W_GMOD)
                ((AND ((PROBABILITY W0) W_GMOD)) ((((P X) Y) W_GMOD) T0))))))))
<     (KONUŞ -DIR -MIŞ -AGR)(-DIR) := (S\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                ((EXISTS W_GMOD)
                 ((AND ((PROBABILITY W0) W_GMOD))
                  ((((P X) Y) W_GMOD) T0))))))))
           ((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
<     (HıRSıZı)(KONUŞ -DIR -MIŞ -AGR -DIR) := S\NP
        : (((LAM P
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 ((EXISTS W_GMOD)
                  ((AND ((PROBABILITY W0) W_GMOD))
                   ((((P X) Y) W_GMOD) T0))))))))
            ((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))))
           ROBBER)
<     (POLIS)(HıRSıZı KONUŞ -DIR -MIŞ -AGR -DIR) := S
        : ((((LAM P
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  ((EXISTS W_GMOD)
                   ((AND ((PROBABILITY W0) W_GMOD))
                    ((((P X) Y) W_GMOD) T0))))))))
             ((LAM P (LAM X (LAM Y ((P X) Y))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                      (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))))
            ROBBER)
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS W_GMOD)
       ((AND ((PROBABILITY W0) W_GMOD))
        ((EXISTS T)
         (((AND ((EARLIER T0) T))
           ((((INIT (((SPEAK ROBBER) W_GMOD) T)) POLICEMAN) W_GMOD) T))
          (NOT
           ((((KNOW
               ((((INIT (((SPEAK ROBBER) W_GMOD) T)) POLICEMAN) W_GMOD) T))
              SPEAKER)
             W_GMOD)
            T)))))))) =
    (\ W0 . \ T0 . EXISTS W_GMOD
     (AND (PROBABILITY W0 W_GMOD)
      (EXISTS T
       (AND (EARLIER T0 T) (INIT (SPEAK ROBBER W_GMOD T) POLICEMAN W_GMOD T)
        (NOT
         (KNOW (INIT (SPEAK ROBBER W_GMOD T) POLICEMAN W_GMOD T) SPEAKER W_GMOD
          T))))))

Derivation 2
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-MIŞ) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (KONUŞ -DIR)(-MIŞ) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (KONUŞ -DIR -MIŞ)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZı)(KONUŞ -DIR -MIŞ -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X)))))
           ROBBER)
LEX   (-DIR) := (S\NP)\*(S\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_GMOD)
               ((AND ((PROBABILITY W0) W_GMOD)) (((P X) W_GMOD) T0)))))))
<     (HıRSıZı KONUŞ -DIR -MIŞ -AGR)(-DIR) := S\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_GMOD)
                ((AND ((PROBABILITY W0) W_GMOD)) (((P X) W_GMOD) T0)))))))
           (((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))
            ROBBER))
<     (POLIS)(HıRSıZı KONUŞ -DIR -MIŞ -AGR -DIR) := S
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_GMOD)
                 ((AND ((PROBABILITY W0) W_GMOD)) (((P X) W_GMOD) T0)))))))
            (((LAM P (LAM X (LAM Y ((P X) Y))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                      (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X)))))
             ROBBER))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS W_GMOD)
       ((AND ((PROBABILITY W0) W_GMOD))
        ((EXISTS T)
         (((AND ((EARLIER T0) T))
           ((((INIT (((SPEAK ROBBER) W_GMOD) T)) POLICEMAN) W_GMOD) T))
          (NOT
           ((((KNOW
               ((((INIT (((SPEAK ROBBER) W_GMOD) T)) POLICEMAN) W_GMOD) T))
              SPEAKER)
             W_GMOD)
            T)))))))) =
    (\ W0 . \ T0 . EXISTS W_GMOD
     (AND (PROBABILITY W0 W_GMOD)
      (EXISTS T
       (AND (EARLIER T0 T) (INIT (SPEAK ROBBER W_GMOD T) POLICEMAN W_GMOD T)
        (NOT
         (KNOW (INIT (SPEAK ROBBER W_GMOD T) POLICEMAN W_GMOD T) SPEAKER W_GMOD
          T))))))

Derivation 3
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-MIŞ) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (KONUŞ -DIR)(-MIŞ) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (KONUŞ -DIR -MIŞ)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZı)(KONUŞ -DIR -MIŞ -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X)))))
           ROBBER)
<     (POLIS)(HıRSıZı KONUŞ -DIR -MIŞ -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))
            ROBBER)
           POLICEMAN)
LEX   (-DIR) := S\*S
        : (LAM P
           (LAM W0
            (LAM T0
             ((EXISTS W_GMOD)
              ((AND ((PROBABILITY W0) W_GMOD)) ((P W_GMOD) T0))))))
<     (POLIS HıRSıZı KONUŞ -DIR -MIŞ -AGR)(-DIR) := S
        : ((LAM P
            (LAM W0
             (LAM T0
              ((EXISTS W_GMOD)
               ((AND ((PROBABILITY W0) W_GMOD)) ((P W_GMOD) T0))))))
           ((((LAM P (LAM X (LAM Y ((P X) Y))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                      (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X)))))
             ROBBER)
            POLICEMAN))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS W_GMOD)
       ((AND ((PROBABILITY W0) W_GMOD))
        ((EXISTS T)
         (((AND ((EARLIER T0) T))
           ((((INIT (((SPEAK ROBBER) W_GMOD) T)) POLICEMAN) W_GMOD) T))
          (NOT
           ((((KNOW
               ((((INIT (((SPEAK ROBBER) W_GMOD) T)) POLICEMAN) W_GMOD) T))
              SPEAKER)
             W_GMOD)
            T)))))))) =
    (\ W0 . \ T0 . EXISTS W_GMOD
     (AND (PROBABILITY W0 W_GMOD)
      (EXISTS T
       (AND (EARLIER T0 T) (INIT (SPEAK ROBBER W_GMOD T) POLICEMAN W_GMOD T)
        (NOT
         (KNOW (INIT (SPEAK ROBBER W_GMOD T) POLICEMAN W_GMOD T) SPEAKER W_GMOD
          T))))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble "66-dir-t-di.txt")

* (ccg-deduce '(komiser polise hırsızı konuş -dir -t -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (POLISE) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-T) := (((VP\NP)\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM A
            (LAM B
             (LAM X
              (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
<     (KONUŞ -DIR)(-T) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM A
             (LAM B
              (LAM X
               (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-DI) := (((VP\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P
           (LAM Z
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                  ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (KONUŞ -DIR -T)(-DI) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM Z
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                   ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
           ((LAM P
             (LAM A
              (LAM B
               (LAM X
                (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-AGR) := (((S\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
<     (KONUŞ -DIR -T -DI)(-AGR) := ((S\NP)\NP)\NP
        : ((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
           ((LAM P
             (LAM Z
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                    ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
            ((LAM P
              (LAM A
               (LAM B
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
<     (HıRSıZı)(KONUŞ -DIR -T -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
            ((LAM P
              (LAM Z
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                     ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
             ((LAM P
               (LAM A
                (LAM B
                 (LAM X
                  (LAM W0
                   (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))))
           ROBBER)
<     (POLISE)(HıRSıZı KONUŞ -DIR -T -DI -AGR) := S\NP
        : ((((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
             ((LAM P
               (LAM Z
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                      ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
              ((LAM P
                (LAM A
                 (LAM B
                  (LAM X
                   (LAM W0
                    (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))))
            ROBBER)
           POLICEMAN)
<     (KOMISER)(POLISE HıRSıZı KONUŞ -DIR -T -DI -AGR) := S
        : (((((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
              ((LAM P
                (LAM Z
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS T)
                      (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                       ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
               ((LAM P
                 (LAM A
                  (LAM B
                   (LAM X
                    (LAM W0
                     (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X))))))
             ROBBER)
            POLICEMAN)
           OFFICER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((((INIT ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)) OFFICER)
           W0)
          T))
        ((((KNOW
            ((((INIT ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))
               OFFICER)
              W0)
             T))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (INIT (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T) OFFICER W0 T)
      (KNOW (INIT (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T) OFFICER W0 T)
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-dir-t-ebil-di.txt")

* (ccg-deduce '(komiser polise hırsızı konuş -dir -t -ebil -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (POLISE) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-T) := (((VP\NP)\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM A
            (LAM B
             (LAM X
              (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
<     (KONUŞ -DIR)(-T) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM A
             (LAM B
              (LAM X
               (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-EBIL) := (((VP\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P
           (LAM Z
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS))
                  (((((P Z) Y) X) W_POS) T0)))))))))
<     (KONUŞ -DIR -T)(-EBIL) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM Z
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS))
                   (((((P Z) Y) X) W_POS) T0)))))))))
           ((LAM P
             (LAM A
              (LAM B
               (LAM X
                (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-DI) := (((VP\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P
           (LAM Z
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                  ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (KONUŞ -DIR -T -EBIL)(-DI) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM Z
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                   ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
           ((LAM P
             (LAM Z
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    (((((P Z) Y) X) W_POS) T0)))))))))
            ((LAM P
              (LAM A
               (LAM B
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
LEX   (-AGR) := (((S\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
<     (KONUŞ -DIR -T -EBIL -DI)(-AGR) := ((S\NP)\NP)\NP
        : ((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
           ((LAM P
             (LAM Z
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                    ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
            ((LAM P
              (LAM Z
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS))
                     (((((P Z) Y) X) W_POS) T0)))))))))
             ((LAM P
               (LAM A
                (LAM B
                 (LAM X
                  (LAM W0
                   (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))))
<     (HıRSıZı)(KONUŞ -DIR -T -EBIL -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
            ((LAM P
              (LAM Z
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                     ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
             ((LAM P
               (LAM Z
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS))
                      (((((P Z) Y) X) W_POS) T0)))))))))
              ((LAM P
                (LAM A
                 (LAM B
                  (LAM X
                   (LAM W0
                    (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X)))))))
           ROBBER)
<     (POLISE)(HıRSıZı KONUŞ -DIR -T -EBIL -DI -AGR) := S\NP
        : ((((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
             ((LAM P
               (LAM Z
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                      ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
              ((LAM P
                (LAM Z
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS))
                       (((((P Z) Y) X) W_POS) T0)))))))))
               ((LAM P
                 (LAM A
                  (LAM B
                   (LAM X
                    (LAM W0
                     (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X)))))))
            ROBBER)
           POLICEMAN)
<     (KOMISER)(POLISE HıRSıZı KONUŞ -DIR -T -EBIL -DI -AGR) := S
        : (((((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
              ((LAM P
                (LAM Z
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS T)
                      (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                       ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
               ((LAM P
                 (LAM Z
                  (LAM Y
                   (LAM X
                    (LAM W0
                     (LAM T0
                      ((EXISTS W_POS)
                       ((AND ((POSSIBILITY W0) W_POS))
                        (((((P Z) Y) X) W_POS) T0)))))))))
                ((LAM P
                  (LAM A
                   (LAM B
                    (LAM X
                     (LAM W0
                      (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                 ((LAM P
                   (LAM A
                    (LAM X
                     (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                  (LAM X (SPEAK X)))))))
             ROBBER)
            POLICEMAN)
           OFFICER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W0) W_POS))
           ((((INIT ((((INIT (((SPEAK ROBBER) W_POS) T)) POLICEMAN) W_POS) T))
              OFFICER)
             W_POS)
            T))))
        ((((KNOW
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W0) W_POS))
              ((((INIT
                  ((((INIT (((SPEAK ROBBER) W_POS) T)) POLICEMAN) W_POS) T))
                 OFFICER)
                W_POS)
               T))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (EXISTS W_POS
       (AND (POSSIBILITY W0 W_POS)
        (INIT (INIT (SPEAK ROBBER W_POS T) POLICEMAN W_POS T) OFFICER W_POS
         T)))
      (KNOW
       (EXISTS W_POS
        (AND (POSSIBILITY W0 W_POS)
         (INIT (INIT (SPEAK ROBBER W_POS T) POLICEMAN W_POS T) OFFICER W_POS
          T)))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-dir-t-ebil-ir-se--ecek.txt")

* (ccg-deduce '(komiser polise hırsızı konuş -dir -t -ebil -ir -se -agr herkes konuş -ecek -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (POLISE) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-T) := (((VP\NP)\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM A
            (LAM B
             (LAM X
              (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
<     (KONUŞ -DIR)(-T) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM A
             (LAM B
              (LAM X
               (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-EBIL) := (((VP\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P
           (LAM Z
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS))
                  (((((P Z) Y) X) W_POS) T0)))))))))
<     (KONUŞ -DIR -T)(-EBIL) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM Z
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS))
                   (((((P Z) Y) X) W_POS) T0)))))))))
           ((LAM P
             (LAM A
              (LAM B
               (LAM X
                (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-IR) := (((VP\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P
           (LAM Z
            (LAM Y
             (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
<     (KONUŞ -DIR -T -EBIL)(-IR) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM Z
             (LAM Y
              (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
           ((LAM P
             (LAM Z
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    (((((P Z) Y) X) W_POS) T0)))))))))
            ((LAM P
              (LAM A
               (LAM B
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
<     (HıRSıZı)(KONUŞ -DIR -T -EBIL -IR) := (VP\NP)\NP
        : (((LAM P
             (LAM Z
              (LAM Y
               (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
            ((LAM P
              (LAM Z
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS))
                     (((((P Z) Y) X) W_POS) T0)))))))))
             ((LAM P
               (LAM A
                (LAM B
                 (LAM X
                  (LAM W0
                   (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))))
           ROBBER)
<     (POLISE)(HıRSıZı KONUŞ -DIR -T -EBIL -IR) := VP\NP
        : ((((LAM P
              (LAM Z
               (LAM Y
                (LAM X
                 (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
             ((LAM P
               (LAM Z
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS))
                      (((((P Z) Y) X) W_POS) T0)))))))))
              ((LAM P
                (LAM A
                 (LAM B
                  (LAM X
                   (LAM W0
                    (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))))
            ROBBER)
           POLICEMAN)
<     (KOMISER)(POLISE HıRSıZı KONUŞ -DIR -T -EBIL -IR) := VP
        : (((((LAM P
               (LAM Z
                (LAM Y
                 (LAM X
                  (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
              ((LAM P
                (LAM Z
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS))
                       (((((P Z) Y) X) W_POS) T0)))))))))
               ((LAM P
                 (LAM A
                  (LAM B
                   (LAM X
                    (LAM W0
                     (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X))))))
             ROBBER)
            POLICEMAN)
           OFFICER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (KOMISER POLISE HıRSıZı KONUŞ -DIR -T -EBIL -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((((LAM P
                (LAM Z
                 (LAM Y
                  (LAM X
                   (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
               ((LAM P
                 (LAM Z
                  (LAM Y
                   (LAM X
                    (LAM W0
                     (LAM T0
                      ((EXISTS W_POS)
                       ((AND ((POSSIBILITY W0) W_POS))
                        (((((P Z) Y) X) W_POS) T0)))))))))
                ((LAM P
                  (LAM A
                   (LAM B
                    (LAM X
                     (LAM W0
                      (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                 ((LAM P
                   (LAM A
                    (LAM X
                     (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                  (LAM X (SPEAK X))))))
              ROBBER)
             POLICEMAN)
            OFFICER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (KOMISER POLISE HıRSıZı KONUŞ -DIR -T -EBIL -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((((LAM P
                 (LAM Z
                  (LAM Y
                   (LAM X
                    (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
                ((LAM P
                  (LAM Z
                   (LAM Y
                    (LAM X
                     (LAM W0
                      (LAM T0
                       ((EXISTS W_POS)
                        ((AND ((POSSIBILITY W0) W_POS))
                         (((((P Z) Y) X) W_POS) T0)))))))))
                 ((LAM P
                   (LAM A
                    (LAM B
                     (LAM X
                      (LAM W0
                       (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                  ((LAM P
                    (LAM A
                     (LAM X
                      (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                   (LAM X (SPEAK X))))))
               ROBBER)
              POLICEMAN)
             OFFICER)))
LEX   (HERKES) := NP
        : EVERYONE
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (SPEAK X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -ECEK)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (SPEAK X))))
<     (HERKES)(KONUŞ -ECEK -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (SPEAK X))))
           EVERYONE)
>     (KOMISER POLISE HıRSıZı KONUŞ -DIR -T -EBIL -IR -SE -AGR)(HERKES KONUŞ -ECEK -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((((LAM P
                  (LAM Z
                   (LAM Y
                    (LAM X
                     (LAM W0 (LAM T0 ((EXISTS T) (((((P Z) Y) X) W0) T))))))))
                 ((LAM P
                   (LAM Z
                    (LAM Y
                     (LAM X
                      (LAM W0
                       (LAM T0
                        ((EXISTS W_POS)
                         ((AND ((POSSIBILITY W0) W_POS))
                          (((((P Z) Y) X) W_POS) T0)))))))))
                  ((LAM P
                    (LAM A
                     (LAM B
                      (LAM X
                       (LAM W0
                        (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                   ((LAM P
                     (LAM A
                      (LAM X
                       (LAM W0
                        (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                    (LAM X (SPEAK X))))))
                ROBBER)
               POLICEMAN)
              OFFICER)))
           (((LAM P (LAM X (P X)))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (SPEAK X))))
            EVERYONE))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T)
          ((EXISTS W_POS)
           ((AND ((POSSIBILITY W_REF) W_POS))
            ((((INIT ((((INIT (((SPEAK ROBBER) W_POS) T)) POLICEMAN) W_POS) T))
               OFFICER)
              W_POS)
             T)))))
        ((EXISTS T) ((AND ((EARLIER T) T0)) (((SPEAK EVERYONE) W_REF) T))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (EXISTS W_POS
        (AND (POSSIBILITY W_REF W_POS)
         (INIT (INIT (SPEAK ROBBER W_POS T) POLICEMAN W_POS T) OFFICER W_POS
          T))))
      (EXISTS T (AND (EARLIER T T0) (SPEAK EVERYONE W_REF T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-dir-t-eme-di.txt")

* (ccg-deduce '(komiser polise hırsızı konuş -dir -t -eme -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (POLISE) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-T) := (((VP\NP)\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM A
            (LAM B
             (LAM X
              (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
<     (KONUŞ -DIR)(-T) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM A
             (LAM B
              (LAM X
               (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-EME) := (((VP\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P
           (LAM Z
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                (NOT
                 ((EXISTS W_POS)
                  ((AND ((ABILITY W0) W_POS))
                   (((((P Z) Y) X) W_POS) T0))))))))))
<     (KONUŞ -DIR -T)(-EME) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM Z
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 (NOT
                  ((EXISTS W_POS)
                   ((AND ((ABILITY W0) W_POS))
                    (((((P Z) Y) X) W_POS) T0))))))))))
           ((LAM P
             (LAM A
              (LAM B
               (LAM X
                (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-DI) := (((VP\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P
           (LAM Z
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                  ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (KONUŞ -DIR -T -EME)(-DI) := ((VP\NP)\NP)\NP
        : ((LAM P
            (LAM Z
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                   ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
           ((LAM P
             (LAM Z
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  (NOT
                   ((EXISTS W_POS)
                    ((AND ((ABILITY W0) W_POS))
                     (((((P Z) Y) X) W_POS) T0))))))))))
            ((LAM P
              (LAM A
               (LAM B
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
LEX   (-AGR) := (((S\NP)\NP)\NP)\\(((VP\NP)\NP)\NP)
        : (LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
<     (KONUŞ -DIR -T -EME -DI)(-AGR) := ((S\NP)\NP)\NP
        : ((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
           ((LAM P
             (LAM Z
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                    ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
            ((LAM P
              (LAM Z
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   (NOT
                    ((EXISTS W_POS)
                     ((AND ((ABILITY W0) W_POS))
                      (((((P Z) Y) X) W_POS) T0))))))))))
             ((LAM P
               (LAM A
                (LAM B
                 (LAM X
                  (LAM W0
                   (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))))
<     (HıRSıZı)(KONUŞ -DIR -T -EME -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
            ((LAM P
              (LAM Z
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                     ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
             ((LAM P
               (LAM Z
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (NOT
                     ((EXISTS W_POS)
                      ((AND ((ABILITY W0) W_POS))
                       (((((P Z) Y) X) W_POS) T0))))))))))
              ((LAM P
                (LAM A
                 (LAM B
                  (LAM X
                   (LAM W0
                    (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X)))))))
           ROBBER)
<     (POLISE)(HıRSıZı KONUŞ -DIR -T -EME -DI -AGR) := S\NP
        : ((((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
             ((LAM P
               (LAM Z
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                      ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
              ((LAM P
                (LAM Z
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     (NOT
                      ((EXISTS W_POS)
                       ((AND ((ABILITY W0) W_POS))
                        (((((P Z) Y) X) W_POS) T0))))))))))
               ((LAM P
                 (LAM A
                  (LAM B
                   (LAM X
                    (LAM W0
                     (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X)))))))
            ROBBER)
           POLICEMAN)
<     (KOMISER)(POLISE HıRSıZı KONUŞ -DIR -T -EME -DI -AGR) := S
        : (((((LAM P (LAM X (LAM Y (LAM Z (((P X) Y) Z)))))
              ((LAM P
                (LAM Z
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS T)
                      (((AND ((EARLIER T0) T)) (((((P Z) Y) X) W0) T))
                       ((((KNOW (((((P Z) Y) X) W0) T)) SPEAKER) W0) T)))))))))
               ((LAM P
                 (LAM Z
                  (LAM Y
                   (LAM X
                    (LAM W0
                     (LAM T0
                      (NOT
                       ((EXISTS W_POS)
                        ((AND ((ABILITY W0) W_POS))
                         (((((P Z) Y) X) W_POS) T0))))))))))
                ((LAM P
                  (LAM A
                   (LAM B
                    (LAM X
                     (LAM W0
                      (LAM T0 ((((INIT ((((P A) B) W0) T0)) X) W0) T0)))))))
                 ((LAM P
                   (LAM A
                    (LAM X
                     (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                  (LAM X (SPEAK X)))))))
             ROBBER)
            POLICEMAN)
           OFFICER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         (NOT
          ((EXISTS W_POS)
           ((AND ((ABILITY W0) W_POS))
            ((((INIT ((((INIT (((SPEAK ROBBER) W_POS) T)) POLICEMAN) W_POS) T))
               OFFICER)
              W_POS)
             T)))))
        ((((KNOW
            (NOT
             ((EXISTS W_POS)
              ((AND ((ABILITY W0) W_POS))
               ((((INIT
                   ((((INIT (((SPEAK ROBBER) W_POS) T)) POLICEMAN) W_POS) T))
                  OFFICER)
                 W_POS)
                T)))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (NOT
       (EXISTS W_POS
        (AND (ABILITY W0 W_POS)
         (INIT (INIT (SPEAK ROBBER W_POS T) POLICEMAN W_POS T) OFFICER W_POS
          T))))
      (KNOW
       (NOT
        (EXISTS W_POS
         (AND (ABILITY W0 W_POS)
          (INIT (INIT (SPEAK ROBBER W_POS T) POLICEMAN W_POS T) OFFICER W_POS
           T))))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-di-se.txt")

* (ccg-deduce '(ahmet gel -di -se -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (GEL)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -DI) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -DI)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -DI -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((P X) W0) T))
                    ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
              (LAM X (COME X)))
             AHMET)))

Final LF, normal-order evaluated: 

    (LAM S
     (LAM W0
      (LAM T0
       ((FORALL W_REF)
        ((CONDITION
          ((EXISTS T)
           (((AND ((EARLIER T0) T)) (((COME AHMET) W_REF) T))
            ((((KNOW (((COME AHMET) W_REF) T)) SPEAKER) W_REF) T))))
         ((S W_REF) T0)))))) =
    (\ S . \ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (AND (EARLIER T0 T) (COME AHMET W_REF T)
        (KNOW (COME AHMET W_REF T) SPEAKER W_REF T)))
      (S W_REF T0)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (ccg-deduce '(ahmet gel -ebil -ecek -se -agr ben de gel -ebil -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (GEL)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (COME X)))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL -EBIL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -EBIL -ECEK) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (COME X))))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -EBIL -ECEK)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (COME X))))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -EBIL -ECEK -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (COME X))))
             AHMET)))
LEX   (BEN) := NP
        : SPEAKER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (BEN)(DE) := NP
        : ((LAM X X) SPEAKER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (GEL)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (COME X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (COME X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -EBIL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (COME X)))))
<     (BEN DE)(GEL -EBIL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (COME X)))))
           ((LAM X X) SPEAKER))
>     (AHMET GEL -EBIL -ECEK -SE -AGR)(BEN DE GEL -EBIL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
                (LAM X (COME X))))
              AHMET)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (COME X)))))
            ((LAM X X) SPEAKER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T)
          ((AND ((EARLIER T) T0))
           ((EXISTS W_POS)
            ((AND ((POSSIBILITY W_REF) W_POS)) (((COME AHMET) W_POS) T))))))
        ((EXISTS T)
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W_REF) W_POS)) (((COME SPEAKER) W_POS) T)))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (AND (EARLIER T T0)
        (EXISTS W_POS (AND (POSSIBILITY W_REF W_POS) (COME AHMET W_POS T)))))
      (EXISTS T
       (EXISTS W_POS (AND (POSSIBILITY W_REF W_POS) (COME SPEAKER W_POS T))))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble "66-ebil-ecek-se--ebil-ir.txt")

* (ccg-deduce '(ahmet gel -ebil -ecek -se -agr ben de gel -ebil -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (GEL)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (COME X)))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL -EBIL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -EBIL -ECEK) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (COME X))))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -EBIL -ECEK)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (COME X))))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -EBIL -ECEK -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (COME X))))
             AHMET)))
LEX   (BEN) := NP
        : SPEAKER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (BEN)(DE) := NP
        : ((LAM X X) SPEAKER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (GEL)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (COME X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (COME X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -EBIL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (COME X)))))
<     (BEN DE)(GEL -EBIL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (COME X)))))
           ((LAM X X) SPEAKER))
>     (AHMET GEL -EBIL -ECEK -SE -AGR)(BEN DE GEL -EBIL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
                (LAM X (COME X))))
              AHMET)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (COME X)))))
            ((LAM X X) SPEAKER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T)
          ((AND ((EARLIER T) T0))
           ((EXISTS W_POS)
            ((AND ((POSSIBILITY W_REF) W_POS)) (((COME AHMET) W_POS) T))))))
        ((EXISTS T)
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W_REF) W_POS)) (((COME SPEAKER) W_POS) T)))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (AND (EARLIER T T0)
        (EXISTS W_POS (AND (POSSIBILITY W_REF W_POS) (COME AHMET W_POS T)))))
      (EXISTS T
       (EXISTS W_POS (AND (POSSIBILITY W_REF W_POS) (COME SPEAKER W_POS T))))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ebil-ir-se--ebil-ir.txt")

* (ccg-deduce '(ahmet gel -ebil -ir -se -agr ben de gel -ebil -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (GEL)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (COME X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -EBIL -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (COME X))))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -EBIL -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (COME X))))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -EBIL -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (COME X))))
             AHMET)))
LEX   (BEN) := NP
        : SPEAKER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (BEN)(DE) := NP
        : ((LAM X X) SPEAKER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (GEL)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (COME X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (COME X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -EBIL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (COME X)))))
<     (BEN DE)(GEL -EBIL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (COME X)))))
           ((LAM X X) SPEAKER))
>     (AHMET GEL -EBIL -IR -SE -AGR)(BEN DE GEL -EBIL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
                (LAM X (COME X))))
              AHMET)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (COME X)))))
            ((LAM X X) SPEAKER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T)
          ((EXISTS W_POS)
           ((AND ((POSSIBILITY W_REF) W_POS)) (((COME AHMET) W_POS) T)))))
        ((EXISTS T)
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W_REF) W_POS)) (((COME SPEAKER) W_POS) T)))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (EXISTS W_POS (AND (POSSIBILITY W_REF W_POS) (COME AHMET W_POS T))))
      (EXISTS T
       (EXISTS W_POS (AND (POSSIBILITY W_REF W_POS) (COME SPEAKER W_POS T))))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ebil-ir-se--ir.txt")

* (ccg-deduce '(ahmet gel -ebil -ir -se -agr ben de gel -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (GEL)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (COME X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -EBIL -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (COME X))))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -EBIL -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (COME X))))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -EBIL -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (COME X))))
             AHMET)))
LEX   (BEN) := NP
        : SPEAKER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (BEN)(DE) := NP
        : ((LAM X X) SPEAKER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (COME X))))
<     (BEN DE)(GEL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (COME X))))
           ((LAM X X) SPEAKER))
>     (AHMET GEL -EBIL -IR -SE -AGR)(BEN DE GEL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
                (LAM X (COME X))))
              AHMET)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (COME X))))
            ((LAM X X) SPEAKER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T)
          ((EXISTS W_POS)
           ((AND ((POSSIBILITY W_REF) W_POS)) (((COME AHMET) W_POS) T)))))
        ((EXISTS T) (((COME SPEAKER) W_REF) T)))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (EXISTS W_POS (AND (POSSIBILITY W_REF W_POS) (COME AHMET W_POS T))))
      (EXISTS T (COME SPEAKER W_REF T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ecek.txt")

* (ccg-deduce '(ahmet gel -ecek -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -ECEK)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -ECEK -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((COME AHMET) W0) T))))) =
    (\ W0 . \ T0 . EXISTS T (AND (EARLIER T T0) (COME AHMET W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ecek--değil.txt")

* (ccg-deduce '(ahmet gel -ecek -agr değil))

NIL
* (dribble)

* (ccg-deduce '(ahmet gel -iyor -agr değil))

NIL
* (ccg-deduce '(ahmet gel -iyor değil -agr))

T
* (dribble "66-ecek--değil.txt")

* (ccg-deduce '(ahmet gel -iyor değil -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
LEX   (DEĞIL) := (VP\NP)\*(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 (NOT (((P X) W0) T0))))))
<     (GEL -IYOR)(DEĞIL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 (NOT (((P X) W0) T0))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -IYOR DEĞIL) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 (NOT (((P X) W0) T0))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X))))
           AHMET)
LEX   (-AGR) := S\*VP
        : (LAM P P)
<     (AHMET GEL -IYOR DEĞIL)(-AGR) := S
        : ((LAM P P)
           (((LAM P (LAM X (LAM W0 (LAM T0 (NOT (((P X) W0) T0))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X))))
            AHMET))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (NOT
       ((((EXISTS T1) EXISTS) T2)
        (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
         (((COME AHMET) W0) (T1 T2))))))) =
    (\ W0 . \ T0 . NOT
     (EXISTS T1 EXISTS T2
      (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W0 (T1 T2)))))

Derivation 2
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -IYOR) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X)))
           AHMET)
LEX   (DEĞIL) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (NOT ((P W0) T0)))))
<     (AHMET GEL -IYOR)(DEĞIL) := VP
        : ((LAM P (LAM W0 (LAM T0 (NOT ((P W0) T0)))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := S\*VP
        : (LAM P P)
<     (AHMET GEL -IYOR DEĞIL)(-AGR) := S
        : ((LAM P P)
           ((LAM P (LAM W0 (LAM T0 (NOT ((P W0) T0)))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))
             AHMET)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (NOT
       ((((EXISTS T1) EXISTS) T2)
        (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
         (((COME AHMET) W0) (T1 T2))))))) =
    (\ W0 . \ T0 . NOT
     (EXISTS T1 EXISTS T2
      (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W0 (T1 T2)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)7
* 

7
* (dribble "66-ecek-di.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -ecek -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -ECEK)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -ECEK -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X)))))
<     (SEN_OKULDAYKEN)(GEL -ECEK -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -ECEK -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((EXISTS T)
          ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL))) (((COME AHMET) W0) T))))
        ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
       ((((KNOW
           ((EXISTS T)
            ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
             (((COME AHMET) W0) T))))
          SPEAKER)
         W0)
        (TIME HEARER_AT_SCHOOL))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 T)))
     (EARLIER T0 (TIME HEARER_AT_SCHOOL))
     (KNOW
      (EXISTS T (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 T)))
      SPEAKER W0 (TIME HEARER_AT_SCHOOL)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ecek-di-se.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -ecek -di -se -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -ECEK)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X))))
<     (SEN_OKULDAYKEN)(GEL -ECEK -DI) := VP\NP
        : (((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -ECEK -DI) := VP
        : ((((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (COME X))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET SEN_OKULDAYKEN GEL -ECEK -DI)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           ((((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               (LAM X (COME X))))
             (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET SEN_OKULDAYKEN GEL -ECEK -DI -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            ((((LAM P
                (LAM V
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (((AND (((P X) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0))))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
                (LAM X (COME X))))
              (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
             AHMET)))

Final LF, normal-order evaluated: 

    (LAM S
     (LAM W0
      (LAM T0
       ((FORALL W_REF)
        ((CONDITION
          (((AND
             ((EXISTS T)
              ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
               (((COME AHMET) W_REF) T))))
            ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
           ((((KNOW
               ((EXISTS T)
                ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
                 (((COME AHMET) W_REF) T))))
              SPEAKER)
             W_REF)
            (TIME HEARER_AT_SCHOOL))))
         ((S W_REF) T0)))))) =
    (\ S . \ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (AND
       (EXISTS T
        (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W_REF T)))
       (EARLIER T0 (TIME HEARER_AT_SCHOOL))
       (KNOW
        (EXISTS T
         (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W_REF T)))
        SPEAKER W_REF (TIME HEARER_AT_SCHOOL)))
      (S W_REF T0)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ecek-di-se--meli-di.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -ecek -di -se -agr ahmet gel -meli -di -agr))

NIL
* (dribble)

* (dribble "66-ecek-di-se--meli-di.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -ecek -di -se -agr ahmet sen_okuldayken gel -meli -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -ECEK)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X))))
<     (SEN_OKULDAYKEN)(GEL -ECEK -DI) := VP\NP
        : (((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -ECEK -DI) := VP
        : ((((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (COME X))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET SEN_OKULDAYKEN GEL -ECEK -DI)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           ((((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               (LAM X (COME X))))
             (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET SEN_OKULDAYKEN GEL -ECEK -DI -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            ((((LAM P
                (LAM V
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (((AND (((P X) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0))))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
                (LAM X (COME X))))
              (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
             AHMET)))
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-MELI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((FORALL W_MOD)
               ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                (((P X) W_MOD) T0)))))))
<     (GEL)(-MELI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 (((P X) W_MOD) T0)))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -MELI)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  (((P X) W_MOD) T0)))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -MELI -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   (((P X) W_MOD) T0)))))))
             (LAM X (COME X)))))
<     (SEN_OKULDAYKEN)(GEL -MELI -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    (((P X) W_MOD) T0)))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -MELI -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     (((P X) W_MOD) T0)))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)
>     (AHMET SEN_OKULDAYKEN GEL -ECEK -DI -SE -AGR)(AHMET SEN_OKULDAYKEN GEL -MELI -DI -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             ((((LAM P
                 (LAM V
                  (LAM X
                   (LAM W0
                    (LAM T0
                     (((AND (((P X) W0) ((V W0) T0)))
                       ((EARLIER T0) ((V W0) T0)))
                      ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                       ((V W0) T0))))))))
                ((LAM P
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
                 (LAM X (COME X))))
               (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
              AHMET)))
           ((((LAM P (LAM V (LAM X ((P V) X))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (((AND (((P X) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0))))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((FORALL W_MOD)
                     ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                      (((P X) W_MOD) T0)))))))
                (LAM X (COME X)))))
             (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
            AHMET))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         (((AND
            ((EXISTS T)
             ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
              (((COME AHMET) W_REF) T))))
           ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
          ((((KNOW
              ((EXISTS T)
               ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
                (((COME AHMET) W_REF) T))))
             SPEAKER)
            W_REF)
           (TIME HEARER_AT_SCHOOL))))
        (((AND
           ((FORALL W_MOD)
            ((CONDITION (((CONGRUENT SPEAKER) W_REF) W_MOD))
             (((COME AHMET) W_MOD) (TIME HEARER_AT_SCHOOL)))))
          ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
         ((((KNOW
             ((FORALL W_MOD)
              ((CONDITION (((CONGRUENT SPEAKER) W_REF) W_MOD))
               (((COME AHMET) W_MOD) (TIME HEARER_AT_SCHOOL)))))
            SPEAKER)
           W_REF)
          (TIME HEARER_AT_SCHOOL))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (AND
       (EXISTS T
        (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W_REF T)))
       (EARLIER T0 (TIME HEARER_AT_SCHOOL))
       (KNOW
        (EXISTS T
         (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W_REF T)))
        SPEAKER W_REF (TIME HEARER_AT_SCHOOL)))
      (AND
       (FORALL W_MOD
        (CONDITION (CONGRUENT SPEAKER W_REF W_MOD)
         (COME AHMET W_MOD (TIME HEARER_AT_SCHOOL))))
       (EARLIER T0 (TIME HEARER_AT_SCHOOL))
       (KNOW
        (FORALL W_MOD
         (CONDITION (CONGRUENT SPEAKER W_REF W_MOD)
          (COME AHMET W_MOD (TIME HEARER_AT_SCHOOL))))
        SPEAKER W_REF (TIME HEARER_AT_SCHOOL)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ecek-miş.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -ecek -miş -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (-MIŞ) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                (NOT
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (GEL -ECEK)(-MIŞ) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 (NOT
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -ECEK -MIŞ)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  (NOT
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X)))))
<     (SEN_OKULDAYKEN)(GEL -ECEK -MIŞ -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   (NOT
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -ECEK -MIŞ -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    (NOT
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((EXISTS T)
          ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL))) (((COME AHMET) W0) T))))
        ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
       (NOT
        ((((KNOW
            ((EXISTS T)
             ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
              (((COME AHMET) W0) T))))
           SPEAKER)
          W0)
         (TIME HEARER_AT_SCHOOL)))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 T)))
     (EARLIER T0 (TIME HEARER_AT_SCHOOL))
     (NOT
      (KNOW
       (EXISTS T (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 T)))
       SPEAKER W0 (TIME HEARER_AT_SCHOOL))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ecek-se.txt")

* (ccg-deduce '(ahmet gel -ecek- se -agr))
No lex entry for -ECEK-! Exiting without parse.
NIL
* (dribble)

* (dribble "66-ecek-se.txt")

* (ccg-deduce '(ahmet gel -ecek -se -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -ECEK) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -ECEK)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -ECEK -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (COME X)))
             AHMET)))

Final LF, normal-order evaluated: 

    (LAM S
     (LAM W0
      (LAM T0
       ((FORALL W_REF)
        ((CONDITION
          ((EXISTS T) ((AND ((EARLIER T) T0)) (((COME AHMET) W_REF) T))))
         ((S W_REF) T0)))))) =
    (\ S . \ W0 . \ T0 . FORALL W_REF
     (CONDITION (EXISTS T (AND (EARLIER T T0) (COME AHMET W_REF T)))
      (S W_REF T0)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ecek-se--ecek.txt")

* (ccg-deduce '(sen gel -ecek -se -agr ben de gel -ecek -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
<     (SEN)(GEL -ECEK) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X)))
           HEARER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (SEN GEL -ECEK)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X)))
            HEARER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (SEN GEL -ECEK -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (COME X)))
             HEARER)))
LEX   (BEN) := NP
        : SPEAKER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (BEN)(DE) := NP
        : ((LAM X X) SPEAKER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (GEL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -ECEK)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (COME X))))
<     (BEN DE)(GEL -ECEK -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (COME X))))
           ((LAM X X) SPEAKER))
>     (SEN GEL -ECEK -SE -AGR)(BEN DE GEL -ECEK -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               (LAM X (COME X)))
              HEARER)))
           (((LAM P (LAM X (P X)))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (COME X))))
            ((LAM X X) SPEAKER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T) ((AND ((EARLIER T) T0)) (((COME HEARER) W_REF) T))))
        ((EXISTS T) ((AND ((EARLIER T) T0)) (((COME SPEAKER) W_REF) T))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION (EXISTS T (AND (EARLIER T T0) (COME HEARER W_REF T)))
      (EXISTS T (AND (EARLIER T T0) (COME SPEAKER W_REF T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-ecek-se--meli.txt")

* (ccg-deduce '(ahmet gel -me -ecek -se -agr sen de gel -me -meli -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
>     (-ME)(-ECEK) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
<     (GEL)(-ME -ECEK) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -ME -ECEK) := VP
        : ((((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -ME -ECEK)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           ((((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -ME -ECEK -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            ((((LAM N
                (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
              (LAM X (COME X)))
             AHMET)))
LEX   (SEN) := NP
        : HEARER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (SEN)(DE) := NP
        : ((LAM X X) HEARER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-MELI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((FORALL W_MOD)
               ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                (((P X) W_MOD) T0)))))))
>     (-ME)(-MELI) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 (((P X) W_MOD) T0))))))))
<     (GEL)(-ME -MELI) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  (((P X) W_MOD) T0))))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -ME -MELI)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   (((P X) W_MOD) T0))))))))
            (LAM X (COME X))))
<     (SEN DE)(GEL -ME -MELI -AGR) := S
        : (((LAM P (LAM X (P X)))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    (((P X) W_MOD) T0))))))))
             (LAM X (COME X))))
           ((LAM X X) HEARER))
>     (AHMET GEL -ME -ECEK -SE -AGR)(SEN DE GEL -ME -MELI -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             ((((LAM N
                 (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
               (LAM X (COME X)))
              AHMET)))
           (((LAM P (LAM X (P X)))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     (((P X) W_MOD) T0))))))))
              (LAM X (COME X))))
            ((LAM X X) HEARER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         (NOT ((EXISTS T) ((AND ((EARLIER T) T0)) (((COME AHMET) W_REF) T)))))
        ((FORALL W_MOD)
         ((CONDITION (((CONGRUENT SPEAKER) W_REF) W_MOD))
          (((NOT (COME HEARER)) W_MOD) T0))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION (NOT (EXISTS T (AND (EARLIER T T0) (COME AHMET W_REF T))))
      (FORALL W_MOD
       (CONDITION (CONGRUENT SPEAKER W_REF W_MOD)
        (NOT (COME HEARER) W_MOD T0)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-eme-di.txt")

* (ccg-deduce '(ahmet gel -eme -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-EME) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              (NOT
               ((EXISTS W_POS)
                ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (GEL)(-EME) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               (NOT
                ((EXISTS W_POS)
                 ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           (LAM X (COME X)))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (GEL -EME)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                (NOT
                 ((EXISTS W_POS)
                  ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            (LAM X (COME X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -EME -DI)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 (NOT
                  ((EXISTS W_POS)
                   ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             (LAM X (COME X)))))
<     (AHMET)(GEL -EME -DI -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  (NOT
                   ((EXISTS W_POS)
                    ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              (LAM X (COME X)))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         (NOT
          ((EXISTS W_POS)
           ((AND ((ABILITY W0) W_POS)) (((COME AHMET) W_POS) T)))))
        ((((KNOW
            (NOT
             ((EXISTS W_POS)
              ((AND ((ABILITY W0) W_POS)) (((COME AHMET) W_POS) T)))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (NOT (EXISTS W_POS (AND (ABILITY W0 W_POS) (COME AHMET W_POS T))))
      (KNOW (NOT (EXISTS W_POS (AND (ABILITY W0 W_POS) (COME AHMET W_POS T))))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ir.txt")

* (ccg-deduce '(ahmet gel -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (COME X))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0 (LAM T0 ((EXISTS T) (((COME AHMET) W0) T)))) =
    (\ W0 . \ T0 . EXISTS T (COME AHMET W0 T))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ir-se.txt")

* (ccg-deduce '(ahmet gel -ir -se -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (COME X)))
             AHMET)))

Final LF, normal-order evaluated: 

    (LAM S
     (LAM W0
      (LAM T0
       ((FORALL W_REF)
        ((CONDITION ((EXISTS T) (((COME AHMET) W_REF) T))) ((S W_REF) T0)))))) =
    (\ S . \ W0 . \ T0 . FORALL W_REF
     (CONDITION (EXISTS T (COME AHMET W_REF T)) (S W_REF T0)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ir-se--ir-se--ebil-ir.txt")

* (ccg-deduce '(komiser konuş -ir -se -agr polis konuş -ir -se -agr hırsız konuş -ebil -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
<     (KOMISER)(KONUŞ -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X)))
           OFFICER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (KOMISER KONUŞ -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))
            OFFICER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (KOMISER KONUŞ -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))
             OFFICER)))
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
<     (POLIS)(KONUŞ -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X)))
           POLICEMAN)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (POLIS KONUŞ -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))
            POLICEMAN))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (POLIS KONUŞ -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))
             POLICEMAN)))
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (KONUŞ)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (SPEAK X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -EBIL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -EBIL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (SPEAK X)))))
           ROBBER)
>     (POLIS KONUŞ -IR -SE -AGR)(HıRSıZ KONUŞ -EBIL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X)))
              POLICEMAN)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (SPEAK X)))))
            ROBBER))
>     (KOMISER KONUŞ -IR -SE -AGR)(POLIS KONUŞ -IR -SE -AGR HıRSıZ KONUŞ -EBIL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X)))
              OFFICER)))
           (((LAM P (LAM S (P S)))
             ((LAM S1
               (LAM S2
                (LAM W0
                 (LAM T0
                  ((FORALL W_REF)
                   ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
              (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                (LAM X (SPEAK X)))
               POLICEMAN)))
            (((LAM P (LAM X (P X)))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               ((LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
                (LAM X (SPEAK X)))))
             ROBBER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION ((EXISTS T) (((SPEAK OFFICER) W_REF) T)))
        ((FORALL W_REF)
         ((CONDITION ((EXISTS T) (((SPEAK POLICEMAN) W_REF) T)))
          ((EXISTS T)
           ((EXISTS W_POS)
            ((AND ((POSSIBILITY W_REF) W_POS))
             (((SPEAK ROBBER) W_POS) T)))))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION (EXISTS T (SPEAK OFFICER W_REF T))
      (FORALL W_REF
       (CONDITION (EXISTS T (SPEAK POLICEMAN W_REF T))
        (EXISTS T
         (EXISTS W_POS
          (AND (POSSIBILITY W_REF W_POS) (SPEAK ROBBER W_POS T))))))))

Derivation 2
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
<     (KOMISER)(KONUŞ -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X)))
           OFFICER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (KOMISER KONUŞ -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))
            OFFICER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (KOMISER KONUŞ -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))
             OFFICER)))
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
<     (POLIS)(KONUŞ -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X)))
           POLICEMAN)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (POLIS KONUŞ -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))
            POLICEMAN))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (POLIS KONUŞ -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))
             POLICEMAN)))
>B    (KOMISER KONUŞ -IR -SE -AGR)(POLIS KONUŞ -IR -SE -AGR) := S/S
        : (LAM X
           (((LAM P (LAM S (P S)))
             ((LAM S1
               (LAM S2
                (LAM W0
                 (LAM T0
                  ((FORALL W_REF)
                   ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
              (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                (LAM X (SPEAK X)))
               OFFICER)))
            (((LAM P (LAM S (P S)))
              ((LAM S1
                (LAM S2
                 (LAM W0
                  (LAM T0
                   ((FORALL W_REF)
                    ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
               (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                 (LAM X (SPEAK X)))
                POLICEMAN)))
             X)))
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
<     (KONUŞ)(-EBIL) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
           (LAM X (SPEAK X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -EBIL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -EBIL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
              (LAM X (SPEAK X)))))
           ROBBER)
>     (KOMISER KONUŞ -IR -SE -AGR POLIS KONUŞ -IR -SE -AGR)(HıRSıZ KONUŞ -EBIL -IR -AGR) := S
        : ((LAM X
            (((LAM P (LAM S (P S)))
              ((LAM S1
                (LAM S2
                 (LAM W0
                  (LAM T0
                   ((FORALL W_REF)
                    ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
               (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                 (LAM X (SPEAK X)))
                OFFICER)))
             (((LAM P (LAM S (P S)))
               ((LAM S1
                 (LAM S2
                  (LAM W0
                   (LAM T0
                    ((FORALL W_REF)
                     ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
                (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                  (LAM X (SPEAK X)))
                 POLICEMAN)))
              X)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
               (LAM X (SPEAK X)))))
            ROBBER))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION ((EXISTS T) (((SPEAK OFFICER) W_REF) T)))
        ((FORALL W_REF)
         ((CONDITION ((EXISTS T) (((SPEAK POLICEMAN) W_REF) T)))
          ((EXISTS T)
           ((EXISTS W_POS)
            ((AND ((POSSIBILITY W_REF) W_POS))
             (((SPEAK ROBBER) W_POS) T)))))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION (EXISTS T (SPEAK OFFICER W_REF T))
      (FORALL W_REF
       (CONDITION (EXISTS T (SPEAK POLICEMAN W_REF T))
        (EXISTS T
         (EXISTS W_POS
          (AND (POSSIBILITY W_REF W_POS) (SPEAK ROBBER W_POS T))))))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-iyor.txt")

* (ccg-deduce '(ahmet gel -iyor -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -IYOR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -IYOR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((((EXISTS T1) EXISTS) T2)
       (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
        (((COME AHMET) W0) (T1 T2)))))) =
    (\ W0 . \ T0 . EXISTS T1 EXISTS T2
     (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W0 (T1 T2))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-iyor-di.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -iyor -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))))
<     (SEN_OKULDAYKEN)(GEL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER (TIME HEARER_AT_SCHOOL)) T1))
            ((EARLIER T2) (TIME HEARER_AT_SCHOOL)))
           (((COME AHMET) W0) (T1 T2)))))
        ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND ((EARLIER (TIME HEARER_AT_SCHOOL)) T1))
              ((EARLIER T2) (TIME HEARER_AT_SCHOOL)))
             (((COME AHMET) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (TIME HEARER_AT_SCHOOL))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND (EARLIER (TIME HEARER_AT_SCHOOL) T1)
       (EARLIER T2 (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 (T1 T2))))
     (EARLIER T0 (TIME HEARER_AT_SCHOOL))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND (EARLIER (TIME HEARER_AT_SCHOOL) T1)
        (EARLIER T2 (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 (T1 T2))))
      SPEAKER W0 (TIME HEARER_AT_SCHOOL)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-iyor-miş.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -iyor -miş -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
LEX   (-MIŞ) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                (NOT
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (GEL -IYOR)(-MIŞ) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 (NOT
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -IYOR -MIŞ)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  (NOT
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))))
<     (SEN_OKULDAYKEN)(GEL -IYOR -MIŞ -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   (NOT
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -IYOR -MIŞ -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    (NOT
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER (TIME HEARER_AT_SCHOOL)) T1))
            ((EARLIER T2) (TIME HEARER_AT_SCHOOL)))
           (((COME AHMET) W0) (T1 T2)))))
        ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
       (NOT
        ((((KNOW
            ((((EXISTS T1) EXISTS) T2)
             (((AND ((EARLIER (TIME HEARER_AT_SCHOOL)) T1))
               ((EARLIER T2) (TIME HEARER_AT_SCHOOL)))
              (((COME AHMET) W0) (T1 T2)))))
           SPEAKER)
          W0)
         (TIME HEARER_AT_SCHOOL)))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND (EARLIER (TIME HEARER_AT_SCHOOL) T1)
       (EARLIER T2 (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 (T1 T2))))
     (EARLIER T0 (TIME HEARER_AT_SCHOOL))
     (NOT
      (KNOW
       (EXISTS T1 EXISTS T2
        (AND (EARLIER (TIME HEARER_AT_SCHOOL) T1)
         (EARLIER T2 (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 (T1 T2))))
       SPEAKER W0 (TIME HEARER_AT_SCHOOL))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-iyor-se.txt")

* (ccg-deduce '(ahmet gel -iyor -se -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -IYOR) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -IYOR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -IYOR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))
             AHMET)))

Final LF, normal-order evaluated: 

    (LAM S
     (LAM W0
      (LAM T0
       ((FORALL W_REF)
        ((CONDITION
          ((((EXISTS T1) EXISTS) T2)
           (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
            (((COME AHMET) W_REF) (T1 T2)))))
         ((S W_REF) T0)))))) =
    (\ S . \ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T1 EXISTS T2
       (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W_REF (T1 T2))))
      (S W_REF T0)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-iyor-se--ir.txt")

* (ccg-deduce '(ahmet gel -iyor -se -agr ben de gel -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -IYOR) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X)))
           AHMET)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (AHMET GEL -IYOR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))
            AHMET))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (AHMET GEL -IYOR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))
             AHMET)))
LEX   (BEN) := NP
        : SPEAKER
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (BEN)(DE) := NP
        : ((LAM X X) SPEAKER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (GEL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (COME X))))
<     (BEN DE)(GEL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (COME X))))
           ((LAM X X) SPEAKER))
>     (AHMET GEL -IYOR -SE -AGR)(BEN DE GEL -IR -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (COME X)))
              AHMET)))
           (((LAM P (LAM X (P X)))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (COME X))))
            ((LAM X X) SPEAKER)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
           (((COME AHMET) W_REF) (T1 T2)))))
        ((EXISTS T) (((COME SPEAKER) W_REF) T)))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T1 EXISTS T2
       (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W_REF (T1 T2))))
      (EXISTS T (COME SPEAKER W_REF T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-di.txt")

* (ccg-deduce '(ahmet gel -me -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
>     (-ME)(-DI) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
<     (GEL)(-ME -DI) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -ME -DI)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           (((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -ME -DI -AGR) := S
        : (((LAM P (LAM X (P X)))
            (((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((P X) W0) T))
                    ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
             (LAM X (COME X))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (NOT
       ((EXISTS T)
        (((AND ((EARLIER T0) T)) (((COME AHMET) W0) T))
         ((((KNOW (((COME AHMET) W0) T)) SPEAKER) W0) T)))))) =
    (\ W0 . \ T0 . NOT
     (EXISTS T
      (AND (EARLIER T0 T) (COME AHMET W0 T)
       (KNOW (COME AHMET W0 T) SPEAKER W0 T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-di-se--me-meli-di.txt")

* (ccg-deduce '(ben gel -me -di -se -agr ahmet de parti_başlamadan gel -me -meli -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
>     (-ME)(-DI) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
<     (GEL)(-ME -DI) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
           (LAM X (COME X)))
<     (BEN)(GEL -ME -DI) := VP
        : ((((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
            (LAM X (COME X)))
           SPEAKER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (BEN GEL -ME -DI)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           ((((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((P X) W0) T))
                    ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
             (LAM X (COME X)))
            SPEAKER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (BEN GEL -ME -DI -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            ((((LAM N
                (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) (((P X) W0) T))
                     ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
              (LAM X (COME X)))
             SPEAKER)))
LEX   (AHMET) := NP
        : AHMET
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (AHMET)(DE) := NP
        : ((LAM X X) AHMET)
LEX   (PARTI_BAŞLAMADAN) := VP
        : (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-MELI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((FORALL W_MOD)
               ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                (((P X) W_MOD) T0)))))))
>     (-ME)(-MELI) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 (((P X) W_MOD) T0))))))))
<     (GEL)(-ME -MELI) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  (((P X) W_MOD) T0))))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -ME -MELI)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   (((P X) W_MOD) T0))))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -ME -MELI -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    (((P X) W_MOD) T0))))))))
             (LAM X (COME X)))))
<     (PARTI_BAŞLAMADAN)(GEL -ME -MELI -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     (((P X) W_MOD) T0))))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS))))
<     (AHMET DE)(PARTI_BAŞLAMADAN GEL -ME -MELI -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((FORALL W_MOD)
                     ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                      (((P X) W_MOD) T0))))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS))))
           ((LAM X X) AHMET))
>     (BEN GEL -ME -DI -SE -AGR)(AHMET DE PARTI_BAŞLAMADAN GEL -ME -MELI -DI -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             ((((LAM N
                 (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) (((P X) W0) T))
                      ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
               (LAM X (COME X)))
              SPEAKER)))
           ((((LAM P (LAM V (LAM X ((P V) X))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (((AND (((P X) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0))))))))
               (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                 (LAM P
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((FORALL W_MOD)
                      ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                       (((P X) W_MOD) T0))))))))
                (LAM X (COME X)))))
             (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS))))
            ((LAM X X) AHMET)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         (NOT
          ((EXISTS T)
           (((AND ((EARLIER T0) T)) (((COME SPEAKER) W_REF) T))
            ((((KNOW (((COME SPEAKER) W_REF) T)) SPEAKER) W_REF) T)))))
        (((AND
           ((FORALL W_MOD)
            ((CONDITION (((CONGRUENT SPEAKER) W_REF) W_MOD))
             (((NOT (COME AHMET)) W_MOD) (TIME_BEFORE PARTY_STARTS)))))
          ((EARLIER T0) (TIME_BEFORE PARTY_STARTS)))
         ((((KNOW
             ((FORALL W_MOD)
              ((CONDITION (((CONGRUENT SPEAKER) W_REF) W_MOD))
               (((NOT (COME AHMET)) W_MOD) (TIME_BEFORE PARTY_STARTS)))))
            SPEAKER)
           W_REF)
          (TIME_BEFORE PARTY_STARTS))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (NOT
       (EXISTS T
        (AND (EARLIER T0 T) (COME SPEAKER W_REF T)
         (KNOW (COME SPEAKER W_REF T) SPEAKER W_REF T))))
      (AND
       (FORALL W_MOD
        (CONDITION (CONGRUENT SPEAKER W_REF W_MOD)
         (NOT (COME AHMET) W_MOD (TIME_BEFORE PARTY_STARTS))))
       (EARLIER T0 (TIME_BEFORE PARTY_STARTS))
       (KNOW
        (FORALL W_MOD
         (CONDITION (CONGRUENT SPEAKER W_REF W_MOD)
          (NOT (COME AHMET) W_MOD (TIME_BEFORE PARTY_STARTS))))
        SPEAKER W_REF (TIME_BEFORE PARTY_STARTS)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (ccg-deduce '(hırsız konuş -me -ebil -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
>     (-ME)(-EBIL) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (KONUŞ)(-ME -EBIL) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           (LAM X (SPEAK X)))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (KONUŞ -ME -EBIL)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -ME -EBIL -DI)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -ME -EBIL -DI -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              (LAM X (SPEAK X)))))
           ROBBER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W0) W_POS)) (((NOT (SPEAK ROBBER)) W_POS) T))))
        ((((KNOW
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W0) W_POS))
              (((NOT (SPEAK ROBBER)) W_POS) T))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (EXISTS W_POS (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
      (KNOW
       (EXISTS W_POS (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble "66-me-ebil-di.txt")

* (ccg-deduce '(hırsız konuş -me -ebil -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
>     (-ME)(-EBIL) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (KONUŞ)(-ME -EBIL) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           (LAM X (SPEAK X)))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (KONUŞ -ME -EBIL)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -ME -EBIL -DI)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -ME -EBIL -DI -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              (LAM X (SPEAK X)))))
           ROBBER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W0) W_POS)) (((NOT (SPEAK ROBBER)) W_POS) T))))
        ((((KNOW
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W0) W_POS))
              (((NOT (SPEAK ROBBER)) W_POS) T))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (EXISTS W_POS (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
      (KNOW
       (EXISTS W_POS (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-ebil-di-se--me-meli-di.txt")

* (ccg-deduce '(ben gel -me -ebil -di -se -agr ahmet de parti_başlamadan gel -me -meli -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
>     (-ME)(-EBIL) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (GEL)(-ME -EBIL) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           (LAM X (COME X)))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (GEL -ME -EBIL)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            (LAM X (COME X))))
<     (BEN)(GEL -ME -EBIL -DI) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             (LAM X (COME X))))
           SPEAKER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (BEN GEL -ME -EBIL -DI)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              (LAM X (COME X))))
            SPEAKER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (BEN GEL -ME -EBIL -DI -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((P X) W0) T))
                    ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
              (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
               (LAM X (COME X))))
             SPEAKER)))
LEX   (AHMET) := NP
        : AHMET
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (AHMET)(DE) := NP
        : ((LAM X X) AHMET)
LEX   (PARTI_BAŞLAMADAN) := VP
        : (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-MELI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((FORALL W_MOD)
               ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                (((P X) W_MOD) T0)))))))
>     (-ME)(-MELI) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 (((P X) W_MOD) T0))))))))
<     (GEL)(-ME -MELI) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  (((P X) W_MOD) T0))))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -ME -MELI)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   (((P X) W_MOD) T0))))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -ME -MELI -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    (((P X) W_MOD) T0))))))))
             (LAM X (COME X)))))
<     (PARTI_BAŞLAMADAN)(GEL -ME -MELI -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     (((P X) W_MOD) T0))))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS))))
<     (AHMET DE)(PARTI_BAŞLAMADAN GEL -ME -MELI -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((FORALL W_MOD)
                     ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                      (((P X) W_MOD) T0))))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS))))
           ((LAM X X) AHMET))
>     (BEN GEL -ME -EBIL -DI -SE -AGR)(AHMET DE PARTI_BAŞLAMADAN GEL -ME -MELI -DI -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) (((P X) W0) T))
                     ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
               (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                 (LAM P
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
                (LAM X (COME X))))
              SPEAKER)))
           ((((LAM P (LAM V (LAM X ((P V) X))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (((AND (((P X) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0))))))))
               (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                 (LAM P
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((FORALL W_MOD)
                      ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                       (((P X) W_MOD) T0))))))))
                (LAM X (COME X)))))
             (LAM W0 (LAM T0 (TIME_BEFORE PARTY_STARTS))))
            ((LAM X X) AHMET)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T)
          (((AND ((EARLIER T0) T))
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W_REF) W_POS))
              (((NOT (COME SPEAKER)) W_POS) T))))
           ((((KNOW
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W_REF) W_POS))
                 (((NOT (COME SPEAKER)) W_POS) T))))
              SPEAKER)
             W_REF)
            T))))
        (((AND
           ((FORALL W_MOD)
            ((CONDITION (((CONGRUENT SPEAKER) W_REF) W_MOD))
             (((NOT (COME AHMET)) W_MOD) (TIME_BEFORE PARTY_STARTS)))))
          ((EARLIER T0) (TIME_BEFORE PARTY_STARTS)))
         ((((KNOW
             ((FORALL W_MOD)
              ((CONDITION (((CONGRUENT SPEAKER) W_REF) W_MOD))
               (((NOT (COME AHMET)) W_MOD) (TIME_BEFORE PARTY_STARTS)))))
            SPEAKER)
           W_REF)
          (TIME_BEFORE PARTY_STARTS))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (AND (EARLIER T0 T)
        (EXISTS W_POS
         (AND (POSSIBILITY W_REF W_POS) (NOT (COME SPEAKER) W_POS T)))
        (KNOW
         (EXISTS W_POS
          (AND (POSSIBILITY W_REF W_POS) (NOT (COME SPEAKER) W_POS T)))
         SPEAKER W_REF T)))
      (AND
       (FORALL W_MOD
        (CONDITION (CONGRUENT SPEAKER W_REF W_MOD)
         (NOT (COME AHMET) W_MOD (TIME_BEFORE PARTY_STARTS))))
       (EARLIER T0 (TIME_BEFORE PARTY_STARTS))
       (KNOW
        (FORALL W_MOD
         (CONDITION (CONGRUENT SPEAKER W_REF W_MOD)
          (NOT (COME AHMET) W_MOD (TIME_BEFORE PARTY_STARTS))))
        SPEAKER W_REF (TIME_BEFORE PARTY_STARTS)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-ebil-ir.txt")

* (ccg-deduce '(hırsız konuş -me -ebil -ir -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
>     (-ME)(-EBIL) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (KONUŞ)(-ME -EBIL) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           (LAM X (SPEAK X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ -ME -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -ME -EBIL -IR)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -ME -EBIL -IR -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              (LAM X (SPEAK X)))))
           ROBBER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       ((EXISTS W_POS)
        ((AND ((POSSIBILITY W0) W_POS)) (((NOT (SPEAK ROBBER)) W_POS) T)))))) =
    (\ W0 . \ T0 . EXISTS T
     (EXISTS W_POS (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-ebil-ir-di.txt")

* (ccg-deduce '(hırsız hapisteyken konuş -me -ebil -ir -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (HAPISTEYKEN) := VP
        : (LAM W0 (LAM T0 (TIME WAS_IN_JAIL)))
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
>     (-ME)(-EBIL) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (KONUŞ)(-ME -EBIL) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           (LAM X (SPEAK X)))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ -ME -EBIL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            (LAM X (SPEAK X))))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (KONUŞ -ME -EBIL -IR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             (LAM X (SPEAK X)))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (KONUŞ -ME -EBIL -IR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              (LAM X (SPEAK X))))))
<     (HAPISTEYKEN)(KONUŞ -ME -EBIL -IR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
               (LAM X (SPEAK X))))))
           (LAM W0 (LAM T0 (TIME WAS_IN_JAIL))))
<     (HıRSıZ)(HAPISTEYKEN KONUŞ -ME -EBIL -IR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                 (LAM P
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
                (LAM X (SPEAK X))))))
            (LAM W0 (LAM T0 (TIME WAS_IN_JAIL))))
           ROBBER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((EXISTS T)
          ((EXISTS W_POS)
           ((AND ((POSSIBILITY W0) W_POS)) (((NOT (SPEAK ROBBER)) W_POS) T)))))
        ((EARLIER T0) (TIME WAS_IN_JAIL)))
       ((((KNOW
           ((EXISTS T)
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W0) W_POS))
              (((NOT (SPEAK ROBBER)) W_POS) T)))))
          SPEAKER)
         W0)
        (TIME WAS_IN_JAIL))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T
      (EXISTS W_POS (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T))))
     (EARLIER T0 (TIME WAS_IN_JAIL))
     (KNOW
      (EXISTS T
       (EXISTS W_POS
        (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T))))
      SPEAKER W0 (TIME WAS_IN_JAIL)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-ebil-miş-di.txt")

* (ccg-deduce '(hırsız hapisteyken konuş -me -ebil -miş -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (HAPISTEYKEN) := VP
        : (LAM W0 (LAM T0 (TIME WAS_IN_JAIL)))
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X ((N NOT) (P X)))))
LEX   (-EBIL) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0)))))))
>     (-ME)(-EBIL) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X ((N NOT) (P X)))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (KONUŞ)(-ME -EBIL) := VP\NP
        : (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           (LAM X (SPEAK X)))
LEX   (-MIŞ) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
<     (KONUŞ -ME -EBIL)(-MIŞ) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
           (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            (LAM X (SPEAK X))))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (KONUŞ -ME -EBIL -MIŞ)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
            (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             (LAM X (SPEAK X)))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (KONUŞ -ME -EBIL -MIŞ -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
             (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              (LAM X (SPEAK X))))))
<     (HAPISTEYKEN)(KONUŞ -ME -EBIL -MIŞ -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((P X) W0) T))
                    (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
              (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
               (LAM X (SPEAK X))))))
           (LAM W0 (LAM T0 (TIME WAS_IN_JAIL))))
<     (HıRSıZ)(HAPISTEYKEN KONUŞ -ME -EBIL -MIŞ -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) (((P X) W0) T))
                     (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
               (((LAM N (LAM P (LAM X ((N NOT) (P X)))))
                 (LAM P
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS)) (((P X) W_POS) T0))))))))
                (LAM X (SPEAK X))))))
            (LAM W0 (LAM T0 (TIME WAS_IN_JAIL))))
           ROBBER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((EXISTS T)
          (((AND ((EARLIER (TIME WAS_IN_JAIL)) T))
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W0) W_POS))
              (((NOT (SPEAK ROBBER)) W_POS) T))))
           (NOT
            ((((KNOW
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS))
                  (((NOT (SPEAK ROBBER)) W_POS) T))))
               SPEAKER)
              W0)
             T)))))
        ((EARLIER T0) (TIME WAS_IN_JAIL)))
       ((((KNOW
           ((EXISTS T)
            (((AND ((EARLIER (TIME WAS_IN_JAIL)) T))
              ((EXISTS W_POS)
               ((AND ((POSSIBILITY W0) W_POS))
                (((NOT (SPEAK ROBBER)) W_POS) T))))
             (NOT
              ((((KNOW
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    (((NOT (SPEAK ROBBER)) W_POS) T))))
                 SPEAKER)
                W0)
               T)))))
          SPEAKER)
         W0)
        (TIME WAS_IN_JAIL))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T
      (AND (EARLIER (TIME WAS_IN_JAIL) T)
       (EXISTS W_POS (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
       (NOT
        (KNOW
         (EXISTS W_POS
          (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
         SPEAKER W0 T))))
     (EARLIER T0 (TIME WAS_IN_JAIL))
     (KNOW
      (EXISTS T
       (AND (EARLIER (TIME WAS_IN_JAIL) T)
        (EXISTS W_POS
         (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
        (NOT
         (KNOW
          (EXISTS W_POS
           (AND (POSSIBILITY W0 W_POS) (NOT (SPEAK ROBBER) W_POS T)))
          SPEAKER W0 T))))
      SPEAKER W0 (TIME WAS_IN_JAIL)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-ecek.txt")

* (ccg-deduce '(ahmet gel -me -ecek -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
>     (-ME)(-ECEK) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
<     (GEL)(-ME -ECEK) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
           (LAM X (COME X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (GEL -ME -ECEK)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           (((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -ME -ECEK -AGR) := S
        : (((LAM P (LAM X (P X)))
            (((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
             (LAM X (COME X))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0 (NOT ((EXISTS T) ((AND ((EARLIER T) T0)) (((COME AHMET) W0) T)))))) =
    (\ W0 . \ T0 . NOT (EXISTS T (AND (EARLIER T T0) (COME AHMET W0 T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-ecek-miş.txt")

* (ccg-deduce '(ahmet sen_okuldayken gel -me -ecek -miş -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (SEN_OKULDAYKEN) := VP
        : (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL)))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
>     (-ME)(-ECEK) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
<     (GEL)(-ME -ECEK) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
           (LAM X (COME X)))
LEX   (-MIŞ) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                (NOT
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (GEL -ME -ECEK)(-MIŞ) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 (NOT
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           (((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -ME -ECEK -MIŞ)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  (NOT
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            (((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
             (LAM X (COME X)))))
<     (SEN_OKULDAYKEN)(GEL -ME -ECEK -MIŞ -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   (NOT
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             (((LAM N
                (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
               (LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
              (LAM X (COME X)))))
           (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
<     (AHMET)(SEN_OKULDAYKEN GEL -ME -ECEK -MIŞ -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    (NOT
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              (((LAM N
                 (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
                (LAM P
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T))))))))
               (LAM X (COME X)))))
            (LAM W0 (LAM T0 (TIME HEARER_AT_SCHOOL))))
           AHMET)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         (NOT
          ((EXISTS T)
           ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
            (((COME AHMET) W0) T)))))
        ((EARLIER T0) (TIME HEARER_AT_SCHOOL)))
       (NOT
        ((((KNOW
            (NOT
             ((EXISTS T)
              ((AND ((EARLIER T) (TIME HEARER_AT_SCHOOL)))
               (((COME AHMET) W0) T)))))
           SPEAKER)
          W0)
         (TIME HEARER_AT_SCHOOL)))))) =
    (\ W0 . \ T0 . AND
     (NOT
      (EXISTS T (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 T))))
     (EARLIER T0 (TIME HEARER_AT_SCHOOL))
     (NOT
      (KNOW
       (NOT
        (EXISTS T (AND (EARLIER T (TIME HEARER_AT_SCHOOL)) (COME AHMET W0 T))))
       SPEAKER W0 (TIME HEARER_AT_SCHOOL))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (ccg-deduce '(sen gel -me -z ol -di -agr))

NIL
* (ccg-deduce '(sen gel -ecek ol -di -agr))

NIL
* (ccg-deduce '(sen gel -ecek ol -di))

NIL
* (ccg-deduce '(sen gel -ecek -agr ol -di))

NIL
* (ccg-deduce '(ben gel -miş ol -di -agr))

NIL
* (ccg-deduce '(ben gel -miş -agr))

T
* (ccg-deduce '(ben gel -miş ol))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-MIŞ) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
<     (GEL)(-MIŞ) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
           (LAM X (COME X)))
LEX   (OL) := (VP\NP)\*(VP\NP)
        : (LAM P (LAM X (AUX (((P X) W0) T0))))
<     (GEL -MIŞ)(OL) := VP\NP
        : ((LAM P (LAM X (AUX (((P X) W0) T0))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
            (LAM X (COME X))))
<     (BEN)(GEL -MIŞ OL) := VP
        : (((LAM P (LAM X (AUX (((P X) W0) T0))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
             (LAM X (COME X))))
           SPEAKER)

Final LF, normal-order evaluated: 

    (AUX
     ((EXISTS T)
      (((AND ((EARLIER T0) T)) (((COME SPEAKER) W0) T))
       (NOT ((((KNOW (((COME SPEAKER) W0) T)) SPEAKER) W0) T))))) =
    (AUX
     (EXISTS T
      (AND (EARLIER T0 T) (COME SPEAKER W0 T)
       (NOT (KNOW (COME SPEAKER W0 T) SPEAKER W0 T)))))

Derivation 2
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-MIŞ) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
<     (GEL)(-MIŞ) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
           (LAM X (COME X)))
<     (BEN)(GEL -MIŞ) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
            (LAM X (COME X)))
           SPEAKER)
LEX   (OL) := VP\*VP
        : (LAM P (AUX ((P W0) T0)))
<     (BEN GEL -MIŞ)(OL) := VP
        : ((LAM P (AUX ((P W0) T0)))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
             (LAM X (COME X)))
            SPEAKER))

Final LF, normal-order evaluated: 

    (AUX
     ((EXISTS T)
      (((AND ((EARLIER T0) T)) (((COME SPEAKER) W0) T))
       (NOT ((((KNOW (((COME SPEAKER) W0) T)) SPEAKER) W0) T))))) =
    (AUX
     (EXISTS T
      (AND (EARLIER T0 T) (COME SPEAKER W0 T)
       (NOT (KNOW (COME SPEAKER W0 T) SPEAKER W0 T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (ccg-deduce '(ol -di))

NIL
* (ccg-deduce '(ol))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (OL) := (((VP\NP)\NP)\NP)\*(((VP\NP)\NP)\NP)
        : (LAM P (LAM X (LAM Y (LAM Z (AUX (((((P X) Y) Z) W0) T0))))))

Final LF, normal-order evaluated: 

    (LAM P (LAM X (LAM Y (LAM Z (AUX (((((P X) Y) Z) W0) T0)))))) =
    (\ P . \ X . \ Y . \ Z . AUX (P X Y Z W0 T0))

Derivation 2
--------------
LEX   (OL) := ((VP\NP)\NP)\*((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y (AUX ((((P X) Y) W0) T0)))))

Final LF, normal-order evaluated: 

    (LAM P (LAM X (LAM Y (AUX ((((P X) Y) W0) T0))))) =
    (\ P . \ X . \ Y . AUX (P X Y W0 T0))

Derivation 3
--------------
LEX   (OL) := (VP\NP)\*(VP\NP)
        : (LAM P (LAM X (AUX (((P X) W0) T0))))

Final LF, normal-order evaluated: 

    (LAM P (LAM X (AUX (((P X) W0) T0)))) =
    (\ P . \ X . AUX (P X W0 T0))

Derivation 4
--------------
LEX   (OL) := VP\*VP
        : (LAM P (AUX ((P W0) T0)))

Final LF, normal-order evaluated: 

    (LAM P (AUX ((P W0) T0))) =
    (\ P . AUX (P W0 T0))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (ccg-deduce '(sen gel -me -z ol))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-Z) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
>     (-ME)(-Z) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
<     (GEL)(-ME -Z) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (OL) := (VP\NP)\*(VP\NP)
        : (LAM P (LAM X (AUX (((P X) W0) T0))))
<     (GEL -ME -Z)(OL) := VP\NP
        : ((LAM P (LAM X (AUX (((P X) W0) T0))))
           (((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
            (LAM X (COME X))))
<     (SEN)(GEL -ME -Z OL) := VP
        : (((LAM P (LAM X (AUX (((P X) W0) T0))))
            (((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
             (LAM X (COME X))))
           HEARER)

Final LF, normal-order evaluated: 

    (AUX (NOT ((EXISTS T) (((COME HEARER) W0) T)))) =
    (AUX (NOT (EXISTS T (COME HEARER W0 T))))

Derivation 2
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-Z) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
>     (-ME)(-Z) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
<     (GEL)(-ME -Z) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
           (LAM X (COME X)))
<     (SEN)(GEL -ME -Z) := VP
        : ((((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
            (LAM X (COME X)))
           HEARER)
LEX   (OL) := VP\*VP
        : (LAM P (AUX ((P W0) T0)))
<     (SEN GEL -ME -Z)(OL) := VP
        : ((LAM P (AUX ((P W0) T0)))
           ((((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
             (LAM X (COME X)))
            HEARER))

Final LF, normal-order evaluated: 

    (AUX (NOT ((EXISTS T) (((COME HEARER) W0) T)))) =
    (AUX (NOT (EXISTS T (COME HEARER W0 T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble "66-iyor--ol-.txt")

* (ccg-deduce '(ahmet gel -iyor ol))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
LEX   (OL) := (VP\NP)\*(VP\NP)
        : (LAM P (LAM X (AUX (((P X) W0) T0))))
<     (GEL -IYOR)(OL) := VP\NP
        : ((LAM P (LAM X (AUX (((P X) W0) T0))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X))))
<     (AHMET)(GEL -IYOR OL) := VP
        : (((LAM P (LAM X (AUX (((P X) W0) T0))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X))))
           AHMET)

Final LF, normal-order evaluated: 

    (AUX
     ((((EXISTS T1) EXISTS) T2)
      (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
       (((COME AHMET) W0) (T1 T2))))) =
    (AUX
     (EXISTS T1 EXISTS T2
      (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W0 (T1 T2)))))

Derivation 2
--------------
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
<     (AHMET)(GEL -IYOR) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X)))
           AHMET)
LEX   (OL) := VP\*VP
        : (LAM P (AUX ((P W0) T0)))
<     (AHMET GEL -IYOR)(OL) := VP
        : ((LAM P (AUX ((P W0) T0)))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))
            AHMET))

Final LF, normal-order evaluated: 

    (AUX
     ((((EXISTS T1) EXISTS) T2)
      (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
       (((COME AHMET) W0) (T1 T2))))) =
    (AUX
     (EXISTS T1 EXISTS T2
      (AND (EARLIER T0 T1) (EARLIER T2 T0) (COME AHMET W0 (T1 T2)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-z--ol-.txt")

* (ccg-deduce '(sen gel -me -z ol))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-Z) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
>     (-ME)(-Z) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
<     (GEL)(-ME -Z) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
           (LAM X (COME X)))
LEX   (OL) := (VP\NP)\*(VP\NP)
        : (LAM P (LAM X (AUX (((P X) W0) T0))))
<     (GEL -ME -Z)(OL) := VP\NP
        : ((LAM P (LAM X (AUX (((P X) W0) T0))))
           (((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
            (LAM X (COME X))))
<     (SEN)(GEL -ME -Z OL) := VP
        : (((LAM P (LAM X (AUX (((P X) W0) T0))))
            (((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
             (LAM X (COME X))))
           HEARER)

Final LF, normal-order evaluated: 

    (AUX (NOT ((EXISTS T) (((COME HEARER) W0) T)))) =
    (AUX (NOT (EXISTS T (COME HEARER W0 T))))

Derivation 2
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-Z) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
>     (-ME)(-Z) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
<     (GEL)(-ME -Z) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
           (LAM X (COME X)))
<     (SEN)(GEL -ME -Z) := VP
        : ((((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
            (LAM X (COME X)))
           HEARER)
LEX   (OL) := VP\*VP
        : (LAM P (AUX ((P W0) T0)))
<     (SEN GEL -ME -Z)(OL) := VP
        : ((LAM P (AUX ((P W0) T0)))
           ((((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
             (LAM X (COME X)))
            HEARER))

Final LF, normal-order evaluated: 

    (AUX (NOT ((EXISTS T) (((COME HEARER) W0) T)))) =
    (AUX (NOT (EXISTS T (COME HEARER W0 T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-miş--ol-.txt")

* (ccg-deduce '(sen gel -miş ol))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-MIŞ) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
<     (GEL)(-MIŞ) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
           (LAM X (COME X)))
LEX   (OL) := (VP\NP)\*(VP\NP)
        : (LAM P (LAM X (AUX (((P X) W0) T0))))
<     (GEL -MIŞ)(OL) := VP\NP
        : ((LAM P (LAM X (AUX (((P X) W0) T0))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
            (LAM X (COME X))))
<     (SEN)(GEL -MIŞ OL) := VP
        : (((LAM P (LAM X (AUX (((P X) W0) T0))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
             (LAM X (COME X))))
           HEARER)

Final LF, normal-order evaluated: 

    (AUX
     ((EXISTS T)
      (((AND ((EARLIER T0) T)) (((COME HEARER) W0) T))
       (NOT ((((KNOW (((COME HEARER) W0) T)) SPEAKER) W0) T))))) =
    (AUX
     (EXISTS T
      (AND (EARLIER T0 T) (COME HEARER W0 T)
       (NOT (KNOW (COME HEARER W0 T) SPEAKER W0 T)))))

Derivation 2
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-MIŞ) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
<     (GEL)(-MIŞ) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
           (LAM X (COME X)))
<     (SEN)(GEL -MIŞ) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
            (LAM X (COME X)))
           HEARER)
LEX   (OL) := VP\*VP
        : (LAM P (AUX ((P W0) T0)))
<     (SEN GEL -MIŞ)(OL) := VP
        : ((LAM P (AUX ((P W0) T0)))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   (NOT ((((KNOW (((P X) W0) T)) SPEAKER) W0) T))))))))
             (LAM X (COME X)))
            HEARER))

Final LF, normal-order evaluated: 

    (AUX
     ((EXISTS T)
      (((AND ((EARLIER T0) T)) (((COME HEARER) W0) T))
       (NOT ((((KNOW (((COME HEARER) W0) T)) SPEAKER) W0) T))))) =
    (AUX
     (EXISTS T
      (AND (EARLIER T0 T) (COME HEARER W0 T)
       (NOT (KNOW (COME HEARER W0 T) SPEAKER W0 T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ungrammatical-3.txt")

* (ccg-deduce '(sen gel -iyor -di ol))

NIL
* (ccg-deduce '(sen gel -iyor -agr ol))

NIL
* (ccg-deduce '(sen gel ol))

NIL
* (dribble)

* (ccg-deduce '(ben hırsızın konuş -diğini duy -di -agr))

T
* (dribble "66-diğini-di.txt")

* (ccg-deduce '(ben hırsızın konuş -diğini duy -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-DIĞINI) := NP\*VP
        : (LAM P (ACTUAL_EVENT P))
<     (HıRSıZıN KONUŞ)(-DIĞINI) := NP
        : ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (DUY) := (VP\NP)\NP
        : (LAM Y (LAM X ((HEAR Y) X)))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
<     (DUY)(-DI) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
           (LAM Y (LAM X ((HEAR Y) X))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (DUY -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
            (LAM Y (LAM X ((HEAR Y) X)))))
<     (HıRSıZıN KONUŞ -DIĞINI)(DUY -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
             (LAM Y (LAM X ((HEAR Y) X)))))
           ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (BEN)(HıRSıZıN KONUŞ -DIĞINI DUY -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
              (LAM Y (LAM X ((HEAR Y) X)))))
            ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
           SPEAKER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((((HEAR (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
        ((((KNOW ((((HEAR (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T) (HEAR (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T)
      (KNOW (HEAR (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T) SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-diğini--diğinde--miş-di.txt")

* (ccg-deduce '(ben hırsızın konuş -diğini ahmet gel-diğinde öğren -miş -di -agr))
No lex entry for GEL-DIĞINDE! Exiting without parse.
NIL
* (dribble)

* (dribble "66-diğini--diğinde--miş-di.txt")

* (ccg-deduce '(ben hırsızın konuş -diğini ahmet gel -diğinde öğren -miş -di -agr))

T
* (ccg-deduce '(ben hırsızın konuş -diğini ahmet gel-diğinde öğren -miş -di -agr))
No lex entry for GEL-DIĞINDE! Exiting without parse.
NIL
* (dribble)

* (dribble "66-diğini--diğinde--miş-di.txt")

* (ccg-deduce '(ben hırsızın konuş -diğini ahmet gel -diğinde öğren -miş -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-DIĞINI) := NP\*VP
        : (LAM P (ACTUAL_EVENT P))
<     (HıRSıZıN KONUŞ)(-DIĞINI) := NP
        : ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (AHMET) := NP
        : AHMET
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
<     (AHMET)(GEL) := VP
        : ((LAM X (COME X)) AHMET)
LEX   (-DIĞINDE) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHEN P))))
<     (AHMET GEL)(-DIĞINDE) := VP
        : ((LAM P (LAM W0 (LAM T0 (WHEN P)))) ((LAM X (COME X)) AHMET))
LEX   (ÖĞREN) := (VP\NP)\NP
        : (LAM Y (LAM X ((LEARN Y) X)))
LEX   (-MIŞ) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (ÖĞREN)(-MIŞ) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
           (LAM Y (LAM X ((LEARN Y) X))))
LEX   (-DI) := (((VP\NP)\NP)\\VP)\\((VP\NP)\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                (((AND ((((P X) Y) W0) ((V W0) T0)))
                  ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (ÖĞREN -MIŞ)(-DI) := ((VP\NP)\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 (((AND ((((P X) Y) W0) ((V W0) T0)))
                   ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
            (LAM Y (LAM X ((LEARN Y) X)))))
LEX   (-AGR) := (((S\NP)\NP)\VP)\\(((VP\NP)\NP)\VP)
        : (LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
<     (ÖĞREN -MIŞ -DI)(-AGR) := ((S\NP)\NP)\VP
        : ((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  (((AND ((((P X) Y) W0) ((V W0) T0)))
                    ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
             (LAM Y (LAM X ((LEARN Y) X))))))
<     (AHMET GEL -DIĞINDE)(ÖĞREN -MIŞ -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   (((AND ((((P X) Y) W0) ((V W0) T0)))
                     ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
              (LAM Y (LAM X ((LEARN Y) X))))))
           ((LAM P (LAM W0 (LAM T0 (WHEN P)))) ((LAM X (COME X)) AHMET)))
<     (HıRSıZıN KONUŞ -DIĞINI)(AHMET GEL -DIĞINDE ÖĞREN -MIŞ -DI -AGR) := S\NP
        : ((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    (((AND ((((P X) Y) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                      (NOT ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
               (LAM Y (LAM X ((LEARN Y) X))))))
            ((LAM P (LAM W0 (LAM T0 (WHEN P)))) ((LAM X (COME X)) AHMET)))
           ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (BEN)(HıRSıZıN KONUŞ -DIĞINI AHMET GEL -DIĞINDE ÖĞREN -MIŞ -DI -AGR) := S
        : (((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     (((AND ((((P X) Y) W0) ((V W0) T0)))
                       ((EARLIER T0) ((V W0) T0)))
                      ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                       ((V W0) T0)))))))))
               ((LAM P
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS T)
                      (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                       (NOT
                        ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
                (LAM Y (LAM X ((LEARN Y) X))))))
             ((LAM P (LAM W0 (LAM T0 (WHEN P)))) ((LAM X (COME X)) AHMET)))
            ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
           SPEAKER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((EXISTS T)
          (((AND ((EARLIER (WHEN (COME AHMET))) T))
            ((((LEARN (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
           (NOT
            ((((KNOW ((((LEARN (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
               SPEAKER)
              W0)
             T)))))
        ((EARLIER T0) (WHEN (COME AHMET))))
       ((((KNOW
           ((EXISTS T)
            (((AND ((EARLIER (WHEN (COME AHMET))) T))
              ((((LEARN (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
             (NOT
              ((((KNOW
                  ((((LEARN (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
                 SPEAKER)
                W0)
               T)))))
          SPEAKER)
         W0)
        (WHEN (COME AHMET)))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T
      (AND (EARLIER (WHEN (COME AHMET)) T)
       (LEARN (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T)
       (NOT
        (KNOW (LEARN (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T) SPEAKER W0
         T))))
     (EARLIER T0 (WHEN (COME AHMET)))
     (KNOW
      (EXISTS T
       (AND (EARLIER (WHEN (COME AHMET)) T)
        (LEARN (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T)
        (NOT
         (KNOW (LEARN (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T) SPEAKER W0
          T))))
      SPEAKER W0 (WHEN (COME AHMET))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-diğini--eme-di.txt")

* (ccg-deduce '(ben hırsızın konuş -diğini duy -eme -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-DIĞINI) := NP\*VP
        : (LAM P (ACTUAL_EVENT P))
<     (HıRSıZıN KONUŞ)(-DIĞINI) := NP
        : ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (DUY) := (VP\NP)\NP
        : (LAM Y (LAM X ((HEAR Y) X)))
LEX   (-EME) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               (NOT
                ((EXISTS W_POS)
                 ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
<     (DUY)(-EME) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                (NOT
                 ((EXISTS W_POS)
                  ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
           (LAM Y (LAM X ((HEAR Y) X))))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
<     (DUY -EME)(-DI) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 (NOT
                  ((EXISTS W_POS)
                   ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
            (LAM Y (LAM X ((HEAR Y) X)))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (DUY -EME -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  (NOT
                   ((EXISTS W_POS)
                    ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
             (LAM Y (LAM X ((HEAR Y) X))))))
<     (HıRSıZıN KONUŞ -DIĞINI)(DUY -EME -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   (NOT
                    ((EXISTS W_POS)
                     ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
              (LAM Y (LAM X ((HEAR Y) X))))))
           ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (BEN)(HıRSıZıN KONUŞ -DIĞINI DUY -EME -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (NOT
                     ((EXISTS W_POS)
                      ((AND ((ABILITY W0) W_POS))
                       ((((P Y) X) W_POS) T0)))))))))
               (LAM Y (LAM X ((HEAR Y) X))))))
            ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
           SPEAKER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         (NOT
          ((EXISTS W_POS)
           ((AND ((ABILITY W0) W_POS))
            ((((HEAR (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W_POS) T)))))
        ((((KNOW
            (NOT
             ((EXISTS W_POS)
              ((AND ((ABILITY W0) W_POS))
               ((((HEAR (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W_POS) T)))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (NOT
       (EXISTS W_POS
        (AND (ABILITY W0 W_POS)
         (HEAR (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W_POS T))))
      (KNOW
       (NOT
        (EXISTS W_POS
         (AND (ABILITY W0 W_POS)
          (HEAR (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W_POS T))))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-diğini--me-di.txt")

* (ccg-deduce '(ben hırsızın konuş -diğini duy -me -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-DIĞINI) := NP\*VP
        : (LAM P (ACTUAL_EVENT P))
<     (HıRSıZıN KONUŞ)(-DIĞINI) := NP
        : ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (DUY) := (VP\NP)\NP
        : (LAM Y (LAM X ((HEAR Y) X)))
LEX   (-ME) := (((VP\NP)\NP)\\((VP\NP)\NP))/*(((VP\NP)\NP)\\((VP\NP)\NP))
        : (LAM N
           (LAM P
            (LAM Y (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
>     (-ME)(-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : ((LAM N
            (LAM P
             (LAM Y (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
           (LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (DUY)(-ME -DI) := (VP\NP)\NP
        : (((LAM N
             (LAM P
              (LAM Y (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
            (LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
           (LAM Y (LAM X ((HEAR Y) X))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (DUY -ME -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           (((LAM N
              (LAM P
               (LAM Y
                (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
             (LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
            (LAM Y (LAM X ((HEAR Y) X)))))
<     (HıRSıZıN KONUŞ -DIĞINI)(DUY -ME -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            (((LAM N
               (LAM P
                (LAM Y
                 (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
              (LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
             (LAM Y (LAM X ((HEAR Y) X)))))
           ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (BEN)(HıRSıZıN KONUŞ -DIĞINI DUY -ME -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             (((LAM N
                (LAM P
                 (LAM Y
                  (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
               (LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                      ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
              (LAM Y (LAM X ((HEAR Y) X)))))
            ((LAM P (ACTUAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
           SPEAKER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (NOT
       ((EXISTS T)
        (((AND ((EARLIER T0) T))
          ((((HEAR (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
         ((((KNOW ((((HEAR (ACTUAL_EVENT (SPEAK ROBBER))) SPEAKER) W0) T))
            SPEAKER)
           W0)
          T)))))) =
    (\ W0 . \ T0 . NOT
     (EXISTS T
      (AND (EARLIER T0 T) (HEAR (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T)
       (KNOW (HEAR (ACTUAL_EVENT (SPEAK ROBBER)) SPEAKER W0 T) SPEAKER W0 T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-dir-il-ecek-iken.txt")

* (ccg-deduce '(hırsız konuş -dir -il -ecek -iken))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (KONUŞ -DIR)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ -DIR -IL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-IKEN) := (VP\*NP)\*(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
<     (KONUŞ -DIR -IL -ECEK)(-IKEN) := VP\*NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
<     (HıRSıZ)(KONUŞ -DIR -IL -ECEK -IKEN) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))))
           ROBBER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (WHILE
       ((EXISTS T)
        ((AND ((EARLIER T) T0))
         ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))) =
    (\ W0 . \ T0 . WHILE
     (EXISTS T (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))

Derivation 2
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (KONUŞ -DIR)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ -DIR -IL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -DIR -IL -ECEK) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X)))))
           ROBBER)
LEX   (-IKEN) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
<     (HıRSıZ KONUŞ -DIR -IL -ECEK)(-IKEN) := VP
        : ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))
            ROBBER))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (WHILE
       ((EXISTS T)
        ((AND ((EARLIER T) T0))
         ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))) =
    (\ W0 . \ T0 . WHILE
     (EXISTS T (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-dir-il-ecek-iken--iyor-di.txt")

* (ccg-deduce '(polis hırsız konuş -dir -il -ecek -iken gel -iyor -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (KONUŞ -DIR)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ -DIR -IL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-IKEN) := (VP\*NP)\*(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
<     (KONUŞ -DIR -IL -ECEK)(-IKEN) := VP\*NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
<     (HıRSıZ)(KONUŞ -DIR -IL -ECEK -IKEN) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))))
           ROBBER)
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))))
<     (HıRSıZ KONUŞ -DIR -IL -ECEK -IKEN)(GEL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))))
           (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))))
            ROBBER))
<     (POLIS)(HıRSıZ KONUŞ -DIR -IL -ECEK -IKEN GEL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (COME X)))))
            (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X))))))
             ROBBER))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND
             ((EARLIER
               (WHILE
                ((EXISTS T)
                 ((AND ((EARLIER T) T0))
                  ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))
              T1))
            ((EARLIER T2)
             (WHILE
              ((EXISTS T)
               ((AND ((EARLIER T) T0))
                ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))
           (((COME POLICEMAN) W0) (T1 T2)))))
        ((EARLIER T0)
         (WHILE
          ((EXISTS T)
           ((AND ((EARLIER T) T0))
            ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND
               ((EARLIER
                 (WHILE
                  ((EXISTS T)
                   ((AND ((EARLIER T) T0))
                    ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))
                T1))
              ((EARLIER T2)
               (WHILE
                ((EXISTS T)
                 ((AND ((EARLIER T) T0))
                  ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))
             (((COME POLICEMAN) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (WHILE
         ((EXISTS T)
          ((AND ((EARLIER T) T0))
           ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND
       (EARLIER
        (WHILE
         (EXISTS T
          (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))
        T1)
       (EARLIER T2
        (WHILE
         (EXISTS T
          (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))
       (COME POLICEMAN W0 (T1 T2))))
     (EARLIER T0
      (WHILE
       (EXISTS T
        (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND
        (EARLIER
         (WHILE
          (EXISTS T
           (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))
         T1)
        (EARLIER T2
         (WHILE
          (EXISTS T
           (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))
        (COME POLICEMAN W0 (T1 T2))))
      SPEAKER W0
      (WHILE
       (EXISTS T
        (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))))

Derivation 2
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (KONUŞ -DIR)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ -DIR -IL)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -DIR -IL -ECEK) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X)))))
           ROBBER)
LEX   (-IKEN) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
<     (HıRSıZ KONUŞ -DIR -IL -ECEK)(-IKEN) := VP
        : ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))
            ROBBER))
LEX   (GEL) := VP\NP
        : (LAM X (COME X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GEL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (COME X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GEL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (COME X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GEL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (COME X)))))
<     (HıRSıZ KONUŞ -DIR -IL -ECEK -IKEN)(GEL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (COME X)))))
           ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X)))))
             ROBBER)))
<     (POLIS)(HıRSıZ KONUŞ -DIR -IL -ECEK -IKEN GEL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (COME X)))))
            ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X)))))
              ROBBER)))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND
             ((EARLIER
               (WHILE
                ((EXISTS T)
                 ((AND ((EARLIER T) T0))
                  ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))
              T1))
            ((EARLIER T2)
             (WHILE
              ((EXISTS T)
               ((AND ((EARLIER T) T0))
                ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))
           (((COME POLICEMAN) W0) (T1 T2)))))
        ((EARLIER T0)
         (WHILE
          ((EXISTS T)
           ((AND ((EARLIER T) T0))
            ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND
               ((EARLIER
                 (WHILE
                  ((EXISTS T)
                   ((AND ((EARLIER T) T0))
                    ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))
                T1))
              ((EARLIER T2)
               (WHILE
                ((EXISTS T)
                 ((AND ((EARLIER T) T0))
                  ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))
             (((COME POLICEMAN) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (WHILE
         ((EXISTS T)
          ((AND ((EARLIER T) T0))
           ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND
       (EARLIER
        (WHILE
         (EXISTS T
          (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))
        T1)
       (EARLIER T2
        (WHILE
         (EXISTS T
          (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))
       (COME POLICEMAN W0 (T1 T2))))
     (EARLIER T0
      (WHILE
       (EXISTS T
        (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND
        (EARLIER
         (WHILE
          (EXISTS T
           (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))
         T1)
        (EARLIER T2
         (WHILE
          (EXISTS T
           (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))
        (COME POLICEMAN W0 (T1 T2))))
      SPEAKER W0
      (WHILE
       (EXISTS T
        (AND (EARLIER T T0) (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-dir-il-ir-iken--meli-di.txt")

* (ccg-deduce '(sen hırsızı hırsız konuş -dir -il -ir -iken izle -meli -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (KONUŞ -DIR)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ -DIR -IL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-IKEN) := (VP\*NP)\*(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
<     (KONUŞ -DIR -IL -IR)(-IKEN) := VP\*NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
<     (HıRSıZ)(KONUŞ -DIR -IL -IR -IKEN) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))))
           ROBBER)
LEX   (IZLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WATCH Y) X)))
LEX   (-MELI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 ((((P X) Y) W_MOD) T0))))))))
<     (IZLE)(-MELI) := (VP\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  ((((P X) Y) W_MOD) T0))))))))
           (LAM Y (LAM X ((WATCH Y) X))))
LEX   (-DI) := (((VP\NP)\NP)\\VP)\\((VP\NP)\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                (((AND ((((P X) Y) W0) ((V W0) T0)))
                  ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (IZLE -MELI)(-DI) := ((VP\NP)\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 (((AND ((((P X) Y) W0) ((V W0) T0)))
                   ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   ((((P X) Y) W_MOD) T0))))))))
            (LAM Y (LAM X ((WATCH Y) X)))))
LEX   (-AGR) := (((S\NP)\NP)\VP)\\(((VP\NP)\NP)\VP)
        : (LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
<     (IZLE -MELI -DI)(-AGR) := ((S\NP)\NP)\VP
        : ((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  (((AND ((((P X) Y) W0) ((V W0) T0)))
                    ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    ((((P X) Y) W_MOD) T0))))))))
             (LAM Y (LAM X ((WATCH Y) X))))))
<     (HıRSıZ KONUŞ -DIR -IL -IR -IKEN)(IZLE -MELI -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   (((AND ((((P X) Y) W0) ((V W0) T0)))
                     ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     ((((P X) Y) W_MOD) T0))))))))
              (LAM Y (LAM X ((WATCH Y) X))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))))
            ROBBER))
<     (HıRSıZı)(HıRSıZ KONUŞ -DIR -IL -IR -IKEN IZLE -MELI -DI -AGR) := S\NP
        : ((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    (((AND ((((P X) Y) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    ((FORALL W_MOD)
                     ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                      ((((P X) Y) W_MOD) T0))))))))
               (LAM Y (LAM X ((WATCH Y) X))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X))))))
             ROBBER))
           ROBBER)
<     (SEN)(HıRSıZı HıRSıZ KONUŞ -DIR -IL -IR -IKEN IZLE -MELI -DI -AGR) := S
        : (((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     (((AND ((((P X) Y) W0) ((V W0) T0)))
                       ((EARLIER T0) ((V W0) T0)))
                      ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                       ((V W0) T0)))))))))
               ((LAM P
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     ((FORALL W_MOD)
                      ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                       ((((P X) Y) W_MOD) T0))))))))
                (LAM Y (LAM X ((WATCH Y) X))))))
             (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
                 ((LAM P
                   (LAM A
                    (LAM X
                     (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                  (LAM X (SPEAK X))))))
              ROBBER))
            ROBBER)
           HEARER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((FORALL W_MOD)
          ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
           ((((WATCH ROBBER) HEARER) W_MOD)
            (WHILE
             ((EXISTS T)
              ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))))
        ((EARLIER T0)
         (WHILE
          ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))
       ((((KNOW
           ((FORALL W_MOD)
            ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
             ((((WATCH ROBBER) HEARER) W_MOD)
              (WHILE
               ((EXISTS T)
                ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))))
          SPEAKER)
         W0)
        (WHILE
         ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (FORALL W_MOD
      (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
       (WATCH ROBBER HEARER W_MOD
        (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))))
     (EARLIER T0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))
     (KNOW
      (FORALL W_MOD
       (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
        (WATCH ROBBER HEARER W_MOD
         (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))))
      SPEAKER W0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))

Derivation 2
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (KONUŞ -DIR)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ -DIR -IL)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ)(KONUŞ -DIR -IL -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X)))))
           ROBBER)
LEX   (-IKEN) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
<     (HıRSıZ KONUŞ -DIR -IL -IR)(-IKEN) := VP
        : ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))
            ROBBER))
LEX   (IZLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WATCH Y) X)))
LEX   (-MELI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 ((((P X) Y) W_MOD) T0))))))))
<     (IZLE)(-MELI) := (VP\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  ((((P X) Y) W_MOD) T0))))))))
           (LAM Y (LAM X ((WATCH Y) X))))
LEX   (-DI) := (((VP\NP)\NP)\\VP)\\((VP\NP)\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                (((AND ((((P X) Y) W0) ((V W0) T0)))
                  ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (IZLE -MELI)(-DI) := ((VP\NP)\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 (((AND ((((P X) Y) W0) ((V W0) T0)))
                   ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   ((((P X) Y) W_MOD) T0))))))))
            (LAM Y (LAM X ((WATCH Y) X)))))
LEX   (-AGR) := (((S\NP)\NP)\VP)\\(((VP\NP)\NP)\VP)
        : (LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
<     (IZLE -MELI -DI)(-AGR) := ((S\NP)\NP)\VP
        : ((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  (((AND ((((P X) Y) W0) ((V W0) T0)))
                    ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    ((((P X) Y) W_MOD) T0))))))))
             (LAM Y (LAM X ((WATCH Y) X))))))
<     (HıRSıZ KONUŞ -DIR -IL -IR -IKEN)(IZLE -MELI -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   (((AND ((((P X) Y) W0) ((V W0) T0)))
                     ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     ((((P X) Y) W_MOD) T0))))))))
              (LAM Y (LAM X ((WATCH Y) X))))))
           ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X)))))
             ROBBER)))
<     (HıRSıZı)(HıRSıZ KONUŞ -DIR -IL -IR -IKEN IZLE -MELI -DI -AGR) := S\NP
        : ((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    (((AND ((((P X) Y) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    ((FORALL W_MOD)
                     ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                      ((((P X) Y) W_MOD) T0))))))))
               (LAM Y (LAM X ((WATCH Y) X))))))
            ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X)))))
              ROBBER)))
           ROBBER)
<     (SEN)(HıRSıZı HıRSıZ KONUŞ -DIR -IL -IR -IKEN IZLE -MELI -DI -AGR) := S
        : (((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     (((AND ((((P X) Y) W0) ((V W0) T0)))
                       ((EARLIER T0) ((V W0) T0)))
                      ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                       ((V W0) T0)))))))))
               ((LAM P
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     ((FORALL W_MOD)
                      ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                       ((((P X) Y) W_MOD) T0))))))))
                (LAM Y (LAM X ((WATCH Y) X))))))
             ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
              (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
                 ((LAM P
                   (LAM A
                    (LAM X
                     (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                  (LAM X (SPEAK X)))))
               ROBBER)))
            ROBBER)
           HEARER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((FORALL W_MOD)
          ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
           ((((WATCH ROBBER) HEARER) W_MOD)
            (WHILE
             ((EXISTS T)
              ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))))
        ((EARLIER T0)
         (WHILE
          ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))
       ((((KNOW
           ((FORALL W_MOD)
            ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
             ((((WATCH ROBBER) HEARER) W_MOD)
              (WHILE
               ((EXISTS T)
                ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T)))))))
          SPEAKER)
         W0)
        (WHILE
         ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) ANONYMOUS) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (FORALL W_MOD
      (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
       (WATCH ROBBER HEARER W_MOD
        (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))))
     (EARLIER T0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))
     (KNOW
      (FORALL W_MOD
       (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
        (WATCH ROBBER HEARER W_MOD
         (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T))))))
      SPEAKER W0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) ANONYMOUS W0 T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-dir-ir-iken--iyor-di.txt")

* (ccg-deduce '(komiser polis hırsızı konuş -dir -ir -iken gül -iyor -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IR) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
<     (KONUŞ -DIR)(-IR) := (VP\NP)\NP
        : ((LAM P
            (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-IKEN) := ((VP\*NP)\*NP)\*((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y (LAM W0 (LAM T0 (WHILE ((((P X) Y) W0) T0)))))))
<     (KONUŞ -DIR -IR)(-IKEN) := (VP\*NP)\*NP
        : ((LAM P
            (LAM X (LAM Y (LAM W0 (LAM T0 (WHILE ((((P X) Y) W0) T0)))))))
           ((LAM P
             (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZı)(KONUŞ -DIR -IR -IKEN) := VP\*NP
        : (((LAM P
             (LAM X (LAM Y (LAM W0 (LAM T0 (WHILE ((((P X) Y) W0) T0)))))))
            ((LAM P
              (LAM Y
               (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X)))))
           ROBBER)
<     (POLIS)(HıRSıZı KONUŞ -DIR -IR -IKEN) := VP
        : ((((LAM P
              (LAM X (LAM Y (LAM W0 (LAM T0 (WHILE ((((P X) Y) W0) T0)))))))
             ((LAM P
               (LAM Y
                (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))
            ROBBER)
           POLICEMAN)
LEX   (GÜL) := VP\NP
        : (LAM X (LAUGH X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GÜL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (LAUGH X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GÜL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (LAUGH X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GÜL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (LAUGH X)))))
<     (POLIS HıRSıZı KONUŞ -DIR -IR -IKEN)(GÜL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (LAUGH X)))))
           ((((LAM P
               (LAM X (LAM Y (LAM W0 (LAM T0 (WHILE ((((P X) Y) W0) T0)))))))
              ((LAM P
                (LAM Y
                 (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X)))))
             ROBBER)
            POLICEMAN))
<     (KOMISER)(POLIS HıRSıZı KONUŞ -DIR -IR -IKEN GÜL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (LAUGH X)))))
            ((((LAM P
                (LAM X (LAM Y (LAM W0 (LAM T0 (WHILE ((((P X) Y) W0) T0)))))))
               ((LAM P
                 (LAM Y
                  (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X)))))
              ROBBER)
             POLICEMAN))
           OFFICER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND
             ((EARLIER
               (WHILE
                ((EXISTS T)
                 ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))
              T1))
            ((EARLIER T2)
             (WHILE
              ((EXISTS T)
               ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
           (((LAUGH OFFICER) W0) (T1 T2)))))
        ((EARLIER T0)
         (WHILE
          ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND
               ((EARLIER
                 (WHILE
                  ((EXISTS T)
                   ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))
                T1))
              ((EARLIER T2)
               (WHILE
                ((EXISTS T)
                 ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
             (((LAUGH OFFICER) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (WHILE
         ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND
       (EARLIER (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))
        T1)
       (EARLIER T2
        (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
       (LAUGH OFFICER W0 (T1 T2))))
     (EARLIER T0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND
        (EARLIER (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))
         T1)
        (EARLIER T2
         (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
        (LAUGH OFFICER W0 (T1 T2))))
      SPEAKER W0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))))

Derivation 2
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IR) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
<     (KONUŞ -DIR)(-IR) := (VP\NP)\NP
        : ((LAM P
            (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
<     (HıRSıZı)(KONUŞ -DIR -IR) := VP\NP
        : (((LAM P
             (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X))))
           ROBBER)
LEX   (-IKEN) := (VP\*NP)\*(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
<     (HıRSıZı KONUŞ -DIR -IR)(-IKEN) := VP\*NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
           (((LAM P
              (LAM Y
               (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))
            ROBBER))
<     (POLIS)(HıRSıZı KONUŞ -DIR -IR -IKEN) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
            (((LAM P
               (LAM Y
                (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))
             ROBBER))
           POLICEMAN)
LEX   (GÜL) := VP\NP
        : (LAM X (LAUGH X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GÜL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (LAUGH X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GÜL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (LAUGH X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GÜL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (LAUGH X)))))
<     (POLIS HıRSıZı KONUŞ -DIR -IR -IKEN)(GÜL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (LAUGH X)))))
           (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
             (((LAM P
                (LAM Y
                 (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))
              ROBBER))
            POLICEMAN))
<     (KOMISER)(POLIS HıRSıZı KONUŞ -DIR -IR -IKEN GÜL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (LAUGH X)))))
            (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
              (((LAM P
                 (LAM Y
                  (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X))))
               ROBBER))
             POLICEMAN))
           OFFICER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND
             ((EARLIER
               (WHILE
                ((EXISTS T)
                 ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))
              T1))
            ((EARLIER T2)
             (WHILE
              ((EXISTS T)
               ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
           (((LAUGH OFFICER) W0) (T1 T2)))))
        ((EARLIER T0)
         (WHILE
          ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND
               ((EARLIER
                 (WHILE
                  ((EXISTS T)
                   ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))
                T1))
              ((EARLIER T2)
               (WHILE
                ((EXISTS T)
                 ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
             (((LAUGH OFFICER) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (WHILE
         ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND
       (EARLIER (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))
        T1)
       (EARLIER T2
        (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
       (LAUGH OFFICER W0 (T1 T2))))
     (EARLIER T0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND
        (EARLIER (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))
         T1)
        (EARLIER T2
         (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
        (LAUGH OFFICER W0 (T1 T2))))
      SPEAKER W0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))))

Derivation 3
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IR) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
<     (KONUŞ -DIR)(-IR) := (VP\NP)\NP
        : ((LAM P
            (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
<     (HıRSıZı)(KONUŞ -DIR -IR) := VP\NP
        : (((LAM P
             (LAM Y (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X))))
           ROBBER)
<     (POLIS)(HıRSıZı KONUŞ -DIR -IR) := VP
        : ((((LAM P
              (LAM Y
               (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))
            ROBBER)
           POLICEMAN)
LEX   (-IKEN) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
<     (POLIS HıRSıZı KONUŞ -DIR -IR)(-IKEN) := VP
        : ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
           ((((LAM P
               (LAM Y
                (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))
             ROBBER)
            POLICEMAN))
LEX   (GÜL) := VP\NP
        : (LAM X (LAUGH X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GÜL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (LAUGH X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GÜL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (LAUGH X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GÜL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (LAUGH X)))))
<     (POLIS HıRSıZı KONUŞ -DIR -IR -IKEN)(GÜL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (LAUGH X)))))
           ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
            ((((LAM P
                (LAM Y
                 (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))
              ROBBER)
             POLICEMAN)))
<     (KOMISER)(POLIS HıRSıZı KONUŞ -DIR -IR -IKEN GÜL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (LAUGH X)))))
            ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
             ((((LAM P
                 (LAM Y
                  (LAM X (LAM W0 (LAM T0 ((EXISTS T) ((((P Y) X) W0) T)))))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X))))
               ROBBER)
              POLICEMAN)))
           OFFICER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND
             ((EARLIER
               (WHILE
                ((EXISTS T)
                 ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))
              T1))
            ((EARLIER T2)
             (WHILE
              ((EXISTS T)
               ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
           (((LAUGH OFFICER) W0) (T1 T2)))))
        ((EARLIER T0)
         (WHILE
          ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND
               ((EARLIER
                 (WHILE
                  ((EXISTS T)
                   ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))
                T1))
              ((EARLIER T2)
               (WHILE
                ((EXISTS T)
                 ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T)))))
             (((LAUGH OFFICER) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (WHILE
         ((EXISTS T) ((((INIT (((SPEAK ROBBER) W0) T)) POLICEMAN) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND
       (EARLIER (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))
        T1)
       (EARLIER T2
        (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
       (LAUGH OFFICER W0 (T1 T2))))
     (EARLIER T0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND
        (EARLIER (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))
         T1)
        (EARLIER T2
         (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T))))
        (LAUGH OFFICER W0 (T1 T2))))
      SPEAKER W0 (WHILE (EXISTS T (INIT (SPEAK ROBBER W0 T) POLICEMAN W0 T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-di-se--meden_önce--ir-di.txt")

* (ccg-deduce '(hırsız konuş -di -se -agr ahmet de hırsız hapse_gir -meden_önce konuş -ir -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (KONUŞ)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           (LAM X (SPEAK X)))
<     (HıRSıZ)(KONUŞ -DI) := VP
        : (((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            (LAM X (SPEAK X)))
           ROBBER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (HıRSıZ KONUŞ -DI)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             (LAM X (SPEAK X)))
            ROBBER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (HıRSıZ KONUŞ -DI -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((P X) W0) T))
                    ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
              (LAM X (SPEAK X)))
             ROBBER)))
LEX   (AHMET) := NP
        : AHMET
LEX   (DE) := NP\*NP
        : (LAM X X)
<     (AHMET)(DE) := NP
        : ((LAM X X) AHMET)
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (HAPSE_GIR) := VP\NP
        : (LAM X (GO_TO_JAIL X))
<     (HıRSıZ)(HAPSE_GIR) := VP
        : ((LAM X (GO_TO_JAIL X)) ROBBER)
LEX   (-MEDEN_ÖNCE) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (BEFORE P))))
<     (HıRSıZ HAPSE_GIR)(-MEDEN_ÖNCE) := VP
        : ((LAM P (LAM W0 (LAM T0 (BEFORE P)))) ((LAM X (GO_TO_JAIL X)) ROBBER))
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (KONUŞ -IR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (KONUŞ -IR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))))
<     (HıRSıZ HAPSE_GIR -MEDEN_ÖNCE)(KONUŞ -IR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))))
           ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
            ((LAM X (GO_TO_JAIL X)) ROBBER)))
<     (AHMET DE)(HıRSıZ HAPSE_GIR -MEDEN_ÖNCE KONUŞ -IR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X)))))
            ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
             ((LAM X (GO_TO_JAIL X)) ROBBER)))
           ((LAM X X) AHMET))
>     (HıRSıZ KONUŞ -DI -SE -AGR)(AHMET DE HıRSıZ HAPSE_GIR -MEDEN_ÖNCE KONUŞ -IR -DI -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) (((P X) W0) T))
                     ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
               (LAM X (SPEAK X)))
              ROBBER)))
           ((((LAM P (LAM V (LAM X ((P V) X))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (((AND (((P X) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0))))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                (LAM X (SPEAK X)))))
             ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
              ((LAM X (GO_TO_JAIL X)) ROBBER)))
            ((LAM X X) AHMET)))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS T)
          (((AND ((EARLIER T0) T)) (((SPEAK ROBBER) W_REF) T))
           ((((KNOW (((SPEAK ROBBER) W_REF) T)) SPEAKER) W_REF) T))))
        (((AND ((EXISTS T) (((SPEAK AHMET) W_REF) T)))
          ((EARLIER T0) (BEFORE (GO_TO_JAIL ROBBER))))
         ((((KNOW ((EXISTS T) (((SPEAK AHMET) W_REF) T))) SPEAKER) W_REF)
          (BEFORE (GO_TO_JAIL ROBBER)))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS T
       (AND (EARLIER T0 T) (SPEAK ROBBER W_REF T)
        (KNOW (SPEAK ROBBER W_REF T) SPEAKER W_REF T)))
      (AND (EXISTS T (SPEAK AHMET W_REF T))
       (EARLIER T0 (BEFORE (GO_TO_JAIL ROBBER)))
       (KNOW (EXISTS T (SPEAK AHMET W_REF T)) SPEAKER W_REF
        (BEFORE (GO_TO_JAIL ROBBER))))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-eceğini--meden_önce--iyor-di.txt")

* (ccg-deduce '(ben hırsızın konuş -eceğini o hapse_gir -meden_önce bil -iyor -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (BEN) := NP
        : SPEAKER
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-ECEĞINI) := NP\*VP
        : (LAM P (HYPOTHETICAL_EVENT P))
<     (HıRSıZıN KONUŞ)(-ECEĞINI) := NP
        : ((LAM P (HYPOTHETICAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (O) := NP
        : THIRD_PERSON
LEX   (HAPSE_GIR) := VP\NP
        : (LAM X (GO_TO_JAIL X))
<     (O)(HAPSE_GIR) := VP
        : ((LAM X (GO_TO_JAIL X)) THIRD_PERSON)
LEX   (-MEDEN_ÖNCE) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (BEFORE P))))
<     (O HAPSE_GIR)(-MEDEN_ÖNCE) := VP
        : ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
           ((LAM X (GO_TO_JAIL X)) THIRD_PERSON))
LEX   (BIL) := (VP\NP)\NP
        : (LAM Y (LAM X ((KNOW Y) X)))
LEX   (-IYOR) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 ((((P Y) X) W0) (T1 T2)))))))))
<     (BIL)(-IYOR) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  ((((P Y) X) W0) (T1 T2)))))))))
           (LAM Y (LAM X ((KNOW Y) X))))
LEX   (-DI) := (((VP\NP)\NP)\\VP)\\((VP\NP)\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                (((AND ((((P X) Y) W0) ((V W0) T0)))
                  ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (BIL -IYOR)(-DI) := ((VP\NP)\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 (((AND ((((P X) Y) W0) ((V W0) T0)))
                   ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   ((((P Y) X) W0) (T1 T2)))))))))
            (LAM Y (LAM X ((KNOW Y) X)))))
LEX   (-AGR) := (((S\NP)\NP)\VP)\\(((VP\NP)\NP)\VP)
        : (LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
<     (BIL -IYOR -DI)(-AGR) := ((S\NP)\NP)\VP
        : ((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  (((AND ((((P X) Y) W0) ((V W0) T0)))
                    ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    ((((P Y) X) W0) (T1 T2)))))))))
             (LAM Y (LAM X ((KNOW Y) X))))))
<     (O HAPSE_GIR -MEDEN_ÖNCE)(BIL -IYOR -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   (((AND ((((P X) Y) W0) ((V W0) T0)))
                     ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     ((((P Y) X) W0) (T1 T2)))))))))
              (LAM Y (LAM X ((KNOW Y) X))))))
           ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
            ((LAM X (GO_TO_JAIL X)) THIRD_PERSON)))
<     (HıRSıZıN KONUŞ -ECEĞINI)(O HAPSE_GIR -MEDEN_ÖNCE BIL -IYOR -DI -AGR) := S\NP
        : ((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    (((AND ((((P X) Y) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((((EXISTS T1) EXISTS) T2)
                     (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                      ((((P Y) X) W0) (T1 T2)))))))))
               (LAM Y (LAM X ((KNOW Y) X))))))
            ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
             ((LAM X (GO_TO_JAIL X)) THIRD_PERSON)))
           ((LAM P (HYPOTHETICAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (BEN)(HıRSıZıN KONUŞ -ECEĞINI O HAPSE_GIR -MEDEN_ÖNCE BIL -IYOR -DI -AGR) := S
        : (((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     (((AND ((((P X) Y) W0) ((V W0) T0)))
                       ((EARLIER T0) ((V W0) T0)))
                      ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                       ((V W0) T0)))))))))
               ((LAM P
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((((EXISTS T1) EXISTS) T2)
                      (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                       ((((P Y) X) W0) (T1 T2)))))))))
                (LAM Y (LAM X ((KNOW Y) X))))))
             ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
              ((LAM X (GO_TO_JAIL X)) THIRD_PERSON)))
            ((LAM P (HYPOTHETICAL_EVENT P)) ((LAM X (SPEAK X)) ROBBER)))
           SPEAKER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER (BEFORE (GO_TO_JAIL THIRD_PERSON))) T1))
            ((EARLIER T2) (BEFORE (GO_TO_JAIL THIRD_PERSON))))
           ((((KNOW (HYPOTHETICAL_EVENT (SPEAK ROBBER))) SPEAKER) W0)
            (T1 T2)))))
        ((EARLIER T0) (BEFORE (GO_TO_JAIL THIRD_PERSON))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND ((EARLIER (BEFORE (GO_TO_JAIL THIRD_PERSON))) T1))
              ((EARLIER T2) (BEFORE (GO_TO_JAIL THIRD_PERSON))))
             ((((KNOW (HYPOTHETICAL_EVENT (SPEAK ROBBER))) SPEAKER) W0)
              (T1 T2)))))
          SPEAKER)
         W0)
        (BEFORE (GO_TO_JAIL THIRD_PERSON)))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND (EARLIER (BEFORE (GO_TO_JAIL THIRD_PERSON)) T1)
       (EARLIER T2 (BEFORE (GO_TO_JAIL THIRD_PERSON)))
       (KNOW (HYPOTHETICAL_EVENT (SPEAK ROBBER)) SPEAKER W0 (T1 T2))))
     (EARLIER T0 (BEFORE (GO_TO_JAIL THIRD_PERSON)))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND (EARLIER (BEFORE (GO_TO_JAIL THIRD_PERSON)) T1)
        (EARLIER T2 (BEFORE (GO_TO_JAIL THIRD_PERSON)))
        (KNOW (HYPOTHETICAL_EVENT (SPEAK ROBBER)) SPEAKER W0 (T1 T2))))
      SPEAKER W0 (BEFORE (GO_TO_JAIL THIRD_PERSON))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-il-di.txt")

* (ccg-deduce '(hırsız yakala -il -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (YAKALA) := (VP\NP)\NP
        : (LAM Y (LAM X ((CATCH Y) X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (YAKALA)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           (LAM Y (LAM X ((CATCH Y) X))))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (YAKALA -IL)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            (LAM Y (LAM X ((CATCH Y) X)))))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (YAKALA -IL -DI)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             (LAM Y (LAM X ((CATCH Y) X))))))
<     (HıRSıZ)(YAKALA -IL -DI -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              (LAM Y (LAM X ((CATCH Y) X))))))
           ROBBER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T)) ((((CATCH ROBBER) ANONYMOUS) W0) T))
        ((((KNOW ((((CATCH ROBBER) ANONYMOUS) W0) T)) SPEAKER) W0) T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T) (CATCH ROBBER ANONYMOUS W0 T)
      (KNOW (CATCH ROBBER ANONYMOUS W0 T) SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ir-iken--iyor-di.txt")

* (ccg-deduce '(polis hırsız konuş -ir -iken gül -iyor -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
LEX   (-IKEN) := (VP\*NP)\*(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
<     (KONUŞ -IR)(-IKEN) := VP\*NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X))))
<     (HıRSıZ)(KONUŞ -IR -IKEN) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X))))
           ROBBER)
LEX   (GÜL) := VP\NP
        : (LAM X (LAUGH X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GÜL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (LAUGH X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GÜL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (LAUGH X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GÜL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (LAUGH X)))))
<     (HıRSıZ KONUŞ -IR -IKEN)(GÜL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (LAUGH X)))))
           (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X))))
            ROBBER))
<     (POLIS)(HıRSıZ KONUŞ -IR -IKEN GÜL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (LAUGH X)))))
            (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X))))
             ROBBER))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))) T1))
            ((EARLIER T2) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
           (((LAUGH POLICEMAN) W0) (T1 T2)))))
        ((EARLIER T0) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND ((EARLIER (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))) T1))
              ((EARLIER T2) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
             (((LAUGH POLICEMAN) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND (EARLIER (WHILE (EXISTS T (SPEAK ROBBER W0 T))) T1)
       (EARLIER T2 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
       (LAUGH POLICEMAN W0 (T1 T2))))
     (EARLIER T0 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND (EARLIER (WHILE (EXISTS T (SPEAK ROBBER W0 T))) T1)
        (EARLIER T2 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
        (LAUGH POLICEMAN W0 (T1 T2))))
      SPEAKER W0 (WHILE (EXISTS T (SPEAK ROBBER W0 T)))))

Derivation 2
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
<     (HıRSıZ)(KONUŞ -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X)))
           ROBBER)
LEX   (-IKEN) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
<     (HıRSıZ KONUŞ -IR)(-IKEN) := VP
        : ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))
            ROBBER))
LEX   (GÜL) := VP\NP
        : (LAM X (LAUGH X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GÜL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (LAUGH X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GÜL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (LAUGH X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GÜL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (LAUGH X)))))
<     (HıRSıZ KONUŞ -IR -IKEN)(GÜL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (LAUGH X)))))
           ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))
             ROBBER)))
<     (POLIS)(HıRSıZ KONUŞ -IR -IKEN GÜL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (LAUGH X)))))
            ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X)))
              ROBBER)))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))) T1))
            ((EARLIER T2) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
           (((LAUGH POLICEMAN) W0) (T1 T2)))))
        ((EARLIER T0) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND ((EARLIER (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))) T1))
              ((EARLIER T2) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
             (((LAUGH POLICEMAN) W0) (T1 T2)))))
          SPEAKER)
         W0)
        (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND (EARLIER (WHILE (EXISTS T (SPEAK ROBBER W0 T))) T1)
       (EARLIER T2 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
       (LAUGH POLICEMAN W0 (T1 T2))))
     (EARLIER T0 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND (EARLIER (WHILE (EXISTS T (SPEAK ROBBER W0 T))) T1)
        (EARLIER T2 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
        (LAUGH POLICEMAN W0 (T1 T2))))
      SPEAKER W0 (WHILE (EXISTS T (SPEAK ROBBER W0 T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ir-iken--meli-di.txt")

* (ccg-deduce '(sen hırsızı hırsız konuş -ir -iken izle -meli -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
LEX   (-IKEN) := (VP\*NP)\*(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
<     (KONUŞ -IR)(-IKEN) := VP\*NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X))))
<     (HıRSıZ)(KONUŞ -IR -IKEN) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X))))
           ROBBER)
LEX   (IZLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WATCH Y) X)))
LEX   (-MELI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 ((((P X) Y) W_MOD) T0))))))))
<     (IZLE)(-MELI) := (VP\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  ((((P X) Y) W_MOD) T0))))))))
           (LAM Y (LAM X ((WATCH Y) X))))
LEX   (-DI) := (((VP\NP)\NP)\\VP)\\((VP\NP)\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                (((AND ((((P X) Y) W0) ((V W0) T0)))
                  ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (IZLE -MELI)(-DI) := ((VP\NP)\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 (((AND ((((P X) Y) W0) ((V W0) T0)))
                   ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   ((((P X) Y) W_MOD) T0))))))))
            (LAM Y (LAM X ((WATCH Y) X)))))
LEX   (-AGR) := (((S\NP)\NP)\VP)\\(((VP\NP)\NP)\VP)
        : (LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
<     (IZLE -MELI -DI)(-AGR) := ((S\NP)\NP)\VP
        : ((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  (((AND ((((P X) Y) W0) ((V W0) T0)))
                    ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    ((((P X) Y) W_MOD) T0))))))))
             (LAM Y (LAM X ((WATCH Y) X))))))
<     (HıRSıZ KONUŞ -IR -IKEN)(IZLE -MELI -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   (((AND ((((P X) Y) W0) ((V W0) T0)))
                     ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     ((((P X) Y) W_MOD) T0))))))))
              (LAM Y (LAM X ((WATCH Y) X))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X))))
            ROBBER))
<     (HıRSıZı)(HıRSıZ KONUŞ -IR -IKEN IZLE -MELI -DI -AGR) := S\NP
        : ((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    (((AND ((((P X) Y) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    ((FORALL W_MOD)
                     ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                      ((((P X) Y) W_MOD) T0))))))))
               (LAM Y (LAM X ((WATCH Y) X))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X))))
             ROBBER))
           ROBBER)
<     (SEN)(HıRSıZı HıRSıZ KONUŞ -IR -IKEN IZLE -MELI -DI -AGR) := S
        : (((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     (((AND ((((P X) Y) W0) ((V W0) T0)))
                       ((EARLIER T0) ((V W0) T0)))
                      ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                       ((V W0) T0)))))))))
               ((LAM P
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     ((FORALL W_MOD)
                      ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                       ((((P X) Y) W_MOD) T0))))))))
                (LAM Y (LAM X ((WATCH Y) X))))))
             (((LAM P (LAM X (LAM W0 (LAM T0 (WHILE (((P X) W0) T0))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                (LAM X (SPEAK X))))
              ROBBER))
            ROBBER)
           HEARER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((FORALL W_MOD)
          ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
           ((((WATCH ROBBER) HEARER) W_MOD)
            (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))))
        ((EARLIER T0) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
       ((((KNOW
           ((FORALL W_MOD)
            ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
             ((((WATCH ROBBER) HEARER) W_MOD)
              (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))))
          SPEAKER)
         W0)
        (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (FORALL W_MOD
      (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
       (WATCH ROBBER HEARER W_MOD (WHILE (EXISTS T (SPEAK ROBBER W0 T))))))
     (EARLIER T0 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
     (KNOW
      (FORALL W_MOD
       (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
        (WATCH ROBBER HEARER W_MOD (WHILE (EXISTS T (SPEAK ROBBER W0 T))))))
      SPEAKER W0 (WHILE (EXISTS T (SPEAK ROBBER W0 T)))))

Derivation 2
--------------
LEX   (SEN) := NP
        : HEARER
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
<     (HıRSıZ)(KONUŞ -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X)))
           ROBBER)
LEX   (-IKEN) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
<     (HıRSıZ KONUŞ -IR)(-IKEN) := VP
        : ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))
            ROBBER))
LEX   (IZLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WATCH Y) X)))
LEX   (-MELI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM W0
              (LAM T0
               ((FORALL W_MOD)
                ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                 ((((P X) Y) W_MOD) T0))))))))
<     (IZLE)(-MELI) := (VP\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                ((FORALL W_MOD)
                 ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                  ((((P X) Y) W_MOD) T0))))))))
           (LAM Y (LAM X ((WATCH Y) X))))
LEX   (-DI) := (((VP\NP)\NP)\\VP)\\((VP\NP)\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM Y
              (LAM W0
               (LAM T0
                (((AND ((((P X) Y) W0) ((V W0) T0)))
                  ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0)))))))))
<     (IZLE -MELI)(-DI) := ((VP\NP)\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 (((AND ((((P X) Y) W0) ((V W0) T0)))
                   ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0)))))))))
           ((LAM P
             (LAM X
              (LAM Y
               (LAM W0
                (LAM T0
                 ((FORALL W_MOD)
                  ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                   ((((P X) Y) W_MOD) T0))))))))
            (LAM Y (LAM X ((WATCH Y) X)))))
LEX   (-AGR) := (((S\NP)\NP)\VP)\\(((VP\NP)\NP)\VP)
        : (LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
<     (IZLE -MELI -DI)(-AGR) := ((S\NP)\NP)\VP
        : ((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  (((AND ((((P X) Y) W0) ((V W0) T0)))
                    ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0)))))))))
            ((LAM P
              (LAM X
               (LAM Y
                (LAM W0
                 (LAM T0
                  ((FORALL W_MOD)
                   ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                    ((((P X) Y) W_MOD) T0))))))))
             (LAM Y (LAM X ((WATCH Y) X))))))
<     (HıRSıZ KONUŞ -IR -IKEN)(IZLE -MELI -DI -AGR) := (S\NP)\NP
        : (((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   (((AND ((((P X) Y) W0) ((V W0) T0)))
                     ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0)))))))))
             ((LAM P
               (LAM X
                (LAM Y
                 (LAM W0
                  (LAM T0
                   ((FORALL W_MOD)
                    ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                     ((((P X) Y) W_MOD) T0))))))))
              (LAM Y (LAM X ((WATCH Y) X))))))
           ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))
             ROBBER)))
<     (HıRSıZı)(HıRSıZ KONUŞ -IR -IKEN IZLE -MELI -DI -AGR) := S\NP
        : ((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    (((AND ((((P X) Y) W0) ((V W0) T0)))
                      ((EARLIER T0) ((V W0) T0)))
                     ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                      ((V W0) T0)))))))))
              ((LAM P
                (LAM X
                 (LAM Y
                  (LAM W0
                   (LAM T0
                    ((FORALL W_MOD)
                     ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                      ((((P X) Y) W_MOD) T0))))))))
               (LAM Y (LAM X ((WATCH Y) X))))))
            ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X)))
              ROBBER)))
           ROBBER)
<     (SEN)(HıRSıZı HıRSıZ KONUŞ -IR -IKEN IZLE -MELI -DI -AGR) := S
        : (((((LAM P (LAM V (LAM X (LAM Y (((P V) X) Y)))))
              ((LAM P
                (LAM V
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     (((AND ((((P X) Y) W0) ((V W0) T0)))
                       ((EARLIER T0) ((V W0) T0)))
                      ((((KNOW ((((P X) Y) W0) ((V W0) T0))) SPEAKER) W0)
                       ((V W0) T0)))))))))
               ((LAM P
                 (LAM X
                  (LAM Y
                   (LAM W0
                    (LAM T0
                     ((FORALL W_MOD)
                      ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
                       ((((P X) Y) W_MOD) T0))))))))
                (LAM Y (LAM X ((WATCH Y) X))))))
             ((LAM P (LAM W0 (LAM T0 (WHILE ((P W0) T0)))))
              (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
                (LAM X (SPEAK X)))
               ROBBER)))
            ROBBER)
           HEARER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((FORALL W_MOD)
          ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
           ((((WATCH ROBBER) HEARER) W_MOD)
            (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))))
        ((EARLIER T0) (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))
       ((((KNOW
           ((FORALL W_MOD)
            ((CONDITION (((CONGRUENT SPEAKER) W0) W_MOD))
             ((((WATCH ROBBER) HEARER) W_MOD)
              (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T)))))))
          SPEAKER)
         W0)
        (WHILE ((EXISTS T) (((SPEAK ROBBER) W0) T))))))) =
    (\ W0 . \ T0 . AND
     (FORALL W_MOD
      (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
       (WATCH ROBBER HEARER W_MOD (WHILE (EXISTS T (SPEAK ROBBER W0 T))))))
     (EARLIER T0 (WHILE (EXISTS T (SPEAK ROBBER W0 T))))
     (KNOW
      (FORALL W_MOD
       (CONDITION (CONGRUENT SPEAKER W0 W_MOD)
        (WATCH ROBBER HEARER W_MOD (WHILE (EXISTS T (SPEAK ROBBER W0 T))))))
      SPEAKER W0 (WHILE (EXISTS T (SPEAK ROBBER W0 T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-ir-se--me-z.txt")

* (ccg-deduce '(hırsız konuş -ir -se -agr ahmet hapse_gir -me -z -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-IR) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
<     (KONUŞ)(-IR) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
           (LAM X (SPEAK X)))
<     (HıRSıZ)(KONUŞ -IR) := VP
        : (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
            (LAM X (SPEAK X)))
           ROBBER)
LEX   (-SE) := (VP/S)\*VP
        : (LAM S1
           (LAM S2
            (LAM W0
             (LAM T0
              ((FORALL W_REF) ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
<     (HıRSıZ KONUŞ -IR)(-SE) := VP/S
        : ((LAM S1
            (LAM S2
             (LAM W0
              (LAM T0
               ((FORALL W_REF)
                ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
           (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
             (LAM X (SPEAK X)))
            ROBBER))
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (HıRSıZ KONUŞ -IR -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((LAM S1
             (LAM S2
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
            (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
              (LAM X (SPEAK X)))
             ROBBER)))
LEX   (AHMET) := NP
        : AHMET
LEX   (HAPSE_GIR) := VP\NP
        : (LAM X (GO_TO_JAIL X))
LEX   (-ME) := ((VP\NP)\\(VP\NP))/*((VP\NP)\\(VP\NP))
        : (LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
LEX   (-Z) := (VP\NP)\\(VP\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
>     (-ME)(-Z) := (VP\NP)\\(VP\NP)
        : ((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
           (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
<     (HAPSE_GIR)(-ME -Z) := VP\NP
        : (((LAM N (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
            (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
           (LAM X (GO_TO_JAIL X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (HAPSE_GIR -ME -Z)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           (((LAM N
              (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
             (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
            (LAM X (GO_TO_JAIL X))))
<     (AHMET)(HAPSE_GIR -ME -Z -AGR) := S
        : (((LAM P (LAM X (P X)))
            (((LAM N
               (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
              (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
             (LAM X (GO_TO_JAIL X))))
           AHMET)
>     (HıRSıZ KONUŞ -IR -SE -AGR)(AHMET HAPSE_GIR -ME -Z -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((LAM S1
              (LAM S2
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((S1 W_REF) T0)) ((S2 W_REF) T0)))))))
             (((LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T))))))
               (LAM X (SPEAK X)))
              ROBBER)))
           (((LAM P (LAM X (P X)))
             (((LAM N
                (LAM P (LAM X (LAM W0 (LAM T0 (NOT ((((N P) X) W0) T0)))))))
               (LAM P (LAM X (LAM W0 (LAM T0 ((EXISTS T) (((P X) W0) T)))))))
              (LAM X (GO_TO_JAIL X))))
            AHMET))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION ((EXISTS T) (((SPEAK ROBBER) W_REF) T)))
        (NOT ((EXISTS T) (((GO_TO_JAIL AHMET) W_REF) T))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION (EXISTS T (SPEAK ROBBER W_REF T))
      (NOT (EXISTS T (GO_TO_JAIL AHMET W_REF T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-meden_önce.txt")

* (ccg-deduce '(hırsız hapse_gir -meden_önce))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (HAPSE_GIR) := VP\NP
        : (LAM X (GO_TO_JAIL X))
<     (HıRSıZ)(HAPSE_GIR) := VP
        : ((LAM X (GO_TO_JAIL X)) ROBBER)
LEX   (-MEDEN_ÖNCE) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (BEFORE P))))
<     (HıRSıZ HAPSE_GIR)(-MEDEN_ÖNCE) := VP
        : ((LAM P (LAM W0 (LAM T0 (BEFORE P)))) ((LAM X (GO_TO_JAIL X)) ROBBER))

Final LF, normal-order evaluated: 

    (LAM W0 (LAM T0 (BEFORE (GO_TO_JAIL ROBBER)))) =
    (\ W0 . \ T0 . BEFORE (GO_TO_JAIL ROBBER))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-meden_önce--dir-il-eme-di-di.txt")

* (ccg-deduce '(hırsız hapse_gir -meden_önce konuş -dir -il -eme -di -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (HAPSE_GIR) := VP\NP
        : (LAM X (GO_TO_JAIL X))
<     (HıRSıZ)(HAPSE_GIR) := VP
        : ((LAM X (GO_TO_JAIL X)) ROBBER)
LEX   (-MEDEN_ÖNCE) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (BEFORE P))))
<     (HıRSıZ HAPSE_GIR)(-MEDEN_ÖNCE) := VP
        : ((LAM P (LAM W0 (LAM T0 (BEFORE P)))) ((LAM X (GO_TO_JAIL X)) ROBBER))
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-IL) := (VP\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
<     (KONUŞ -DIR)(-IL) := VP\NP
        : ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-EME) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              (NOT
               ((EXISTS W_POS)
                ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
<     (KONUŞ -DIR -IL)(-EME) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               (NOT
                ((EXISTS W_POS)
                 ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
           ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-DI) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((EXISTS T)
               (((AND ((EARLIER T0) T)) (((P X) W0) T))
                ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
<     (KONUŞ -DIR -IL -EME)(-DI) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) (((P X) W0) T))
                 ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                (NOT
                 ((EXISTS W_POS)
                  ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
            ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (KONUŞ -DIR -IL -EME -DI)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) (((P X) W0) T))
                  ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 (NOT
                  ((EXISTS W_POS)
                   ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
             ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X)))))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (KONUŞ -DIR -IL -EME -DI -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) (((P X) W0) T))
                   ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  (NOT
                   ((EXISTS W_POS)
                    ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
              ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))))))
<     (HıRSıZ HAPSE_GIR -MEDEN_ÖNCE)(KONUŞ -DIR -IL -EME -DI -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) (((P X) W0) T))
                    ((((KNOW (((P X) W0) T)) SPEAKER) W0) T)))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   (NOT
                    ((EXISTS W_POS)
                     ((AND ((ABILITY W0) W_POS)) (((P X) W_POS) T0))))))))
               ((LAM P (LAM X (LAM W0 (LAM T0 ((((P X) ANONYMOUS) W0) T0)))))
                ((LAM P
                  (LAM A
                   (LAM X
                    (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                 (LAM X (SPEAK X))))))))
           ((LAM P (LAM W0 (LAM T0 (BEFORE P))))
            ((LAM X (GO_TO_JAIL X)) ROBBER)))

Final LF, normal-order evaluated: 

    (LAM X
     (LAM W0
      (LAM T0
       (((AND
          ((EXISTS T)
           (((AND ((EARLIER (BEFORE (GO_TO_JAIL ROBBER))) T))
             (NOT
              ((EXISTS W_POS)
               ((AND ((ABILITY W0) W_POS))
                ((((INIT (((SPEAK X) W_POS) T)) ANONYMOUS) W_POS) T)))))
            ((((KNOW
                (NOT
                 ((EXISTS W_POS)
                  ((AND ((ABILITY W0) W_POS))
                   ((((INIT (((SPEAK X) W_POS) T)) ANONYMOUS) W_POS) T)))))
               SPEAKER)
              W0)
             T))))
         ((EARLIER T0) (BEFORE (GO_TO_JAIL ROBBER))))
        ((((KNOW
            ((EXISTS T)
             (((AND ((EARLIER (BEFORE (GO_TO_JAIL ROBBER))) T))
               (NOT
                ((EXISTS W_POS)
                 ((AND ((ABILITY W0) W_POS))
                  ((((INIT (((SPEAK X) W_POS) T)) ANONYMOUS) W_POS) T)))))
              ((((KNOW
                  (NOT
                   ((EXISTS W_POS)
                    ((AND ((ABILITY W0) W_POS))
                     ((((INIT (((SPEAK X) W_POS) T)) ANONYMOUS) W_POS) T)))))
                 SPEAKER)
                W0)
               T))))
           SPEAKER)
          W0)
         (BEFORE (GO_TO_JAIL ROBBER))))))) =
    (\ X . \ W0 . \ T0 . AND
     (EXISTS T
      (AND (EARLIER (BEFORE (GO_TO_JAIL ROBBER)) T)
       (NOT
        (EXISTS W_POS
         (AND (ABILITY W0 W_POS) (INIT (SPEAK X W_POS T) ANONYMOUS W_POS T))))
       (KNOW
        (NOT
         (EXISTS W_POS
          (AND (ABILITY W0 W_POS) (INIT (SPEAK X W_POS T) ANONYMOUS W_POS T))))
        SPEAKER W0 T)))
     (EARLIER T0 (BEFORE (GO_TO_JAIL ROBBER)))
     (KNOW
      (EXISTS T
       (AND (EARLIER (BEFORE (GO_TO_JAIL ROBBER)) T)
        (NOT
         (EXISTS W_POS
          (AND (ABILITY W0 W_POS) (INIT (SPEAK X W_POS T) ANONYMOUS W_POS T))))
        (KNOW
         (NOT
          (EXISTS W_POS
           (AND (ABILITY W0 W_POS)
            (INIT (SPEAK X W_POS T) ANONYMOUS W_POS T))))
         SPEAKER W0 T)))
      SPEAKER W0 (BEFORE (GO_TO_JAIL ROBBER))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-me-diğinde--iyor-di.txt")

* (ccg-deduce '(komiser hırsız konuş -me -diğinde gül -iyor -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (KOMISER) := NP
        : OFFICER
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZ)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-ME) := (VP\*VP)/*(VP\*VP)
        : (LAM N (LAM P ((N NOT) P)))
LEX   (-DIĞINDE) := VP\*VP
        : (LAM P (LAM W0 (LAM T0 (WHEN P))))
>     (-ME)(-DIĞINDE) := VP\*VP
        : ((LAM N (LAM P ((N NOT) P))) (LAM P (LAM W0 (LAM T0 (WHEN P)))))
<     (HıRSıZ KONUŞ)(-ME -DIĞINDE) := VP
        : (((LAM N (LAM P ((N NOT) P))) (LAM P (LAM W0 (LAM T0 (WHEN P)))))
           ((LAM X (SPEAK X)) ROBBER))
LEX   (GÜL) := VP\NP
        : (LAM X (LAUGH X))
LEX   (-IYOR) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0
              ((((EXISTS T1) EXISTS) T2)
               (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                (((P X) W0) (T1 T2))))))))
<     (GÜL)(-IYOR) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0
               ((((EXISTS T1) EXISTS) T2)
                (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                 (((P X) W0) (T1 T2))))))))
           (LAM X (LAUGH X)))
LEX   (-DI) := ((VP\NP)\\VP)\\(VP\NP)
        : (LAM P
           (LAM V
            (LAM X
             (LAM W0
              (LAM T0
               (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                 ((V W0) T0))))))))
<     (GÜL -IYOR)(-DI) := (VP\NP)\\VP
        : ((LAM P
            (LAM V
             (LAM X
              (LAM W0
               (LAM T0
                (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                 ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                  ((V W0) T0))))))))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0
                ((((EXISTS T1) EXISTS) T2)
                 (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                  (((P X) W0) (T1 T2))))))))
            (LAM X (LAUGH X))))
LEX   (-AGR) := ((S\NP)\VP)\\((VP\NP)\VP)
        : (LAM P (LAM V (LAM X ((P V) X))))
<     (GÜL -IYOR -DI)(-AGR) := (S\NP)\VP
        : ((LAM P (LAM V (LAM X ((P V) X))))
           ((LAM P
             (LAM V
              (LAM X
               (LAM W0
                (LAM T0
                 (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                  ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                   ((V W0) T0))))))))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((((EXISTS T1) EXISTS) T2)
                  (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                   (((P X) W0) (T1 T2))))))))
             (LAM X (LAUGH X)))))
<     (HıRSıZ KONUŞ -ME -DIĞINDE)(GÜL -IYOR -DI -AGR) := S\NP
        : (((LAM P (LAM V (LAM X ((P V) X))))
            ((LAM P
              (LAM V
               (LAM X
                (LAM W0
                 (LAM T0
                  (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                   ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                    ((V W0) T0))))))))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((((EXISTS T1) EXISTS) T2)
                   (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                    (((P X) W0) (T1 T2))))))))
              (LAM X (LAUGH X)))))
           (((LAM N (LAM P ((N NOT) P))) (LAM P (LAM W0 (LAM T0 (WHEN P)))))
            ((LAM X (SPEAK X)) ROBBER)))
<     (KOMISER)(HıRSıZ KONUŞ -ME -DIĞINDE GÜL -IYOR -DI -AGR) := S
        : ((((LAM P (LAM V (LAM X ((P V) X))))
             ((LAM P
               (LAM V
                (LAM X
                 (LAM W0
                  (LAM T0
                   (((AND (((P X) W0) ((V W0) T0))) ((EARLIER T0) ((V W0) T0)))
                    ((((KNOW (((P X) W0) ((V W0) T0))) SPEAKER) W0)
                     ((V W0) T0))))))))
              ((LAM P
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((((EXISTS T1) EXISTS) T2)
                    (((AND ((EARLIER T0) T1)) ((EARLIER T2) T0))
                     (((P X) W0) (T1 T2))))))))
               (LAM X (LAUGH X)))))
            (((LAM N (LAM P ((N NOT) P))) (LAM P (LAM W0 (LAM T0 (WHEN P)))))
             ((LAM X (SPEAK X)) ROBBER)))
           OFFICER)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (((AND
         ((((EXISTS T1) EXISTS) T2)
          (((AND ((EARLIER ((WHEN NOT) T0)) T1))
            ((EARLIER T2) ((WHEN NOT) T0)))
           (((LAUGH OFFICER) W0) (T1 T2)))))
        ((EARLIER T0) ((WHEN NOT) T0)))
       ((((KNOW
           ((((EXISTS T1) EXISTS) T2)
            (((AND ((EARLIER ((WHEN NOT) T0)) T1))
              ((EARLIER T2) ((WHEN NOT) T0)))
             (((LAUGH OFFICER) W0) (T1 T2)))))
          SPEAKER)
         W0)
        ((WHEN NOT) T0))))) =
    (\ W0 . \ T0 . AND
     (EXISTS T1 EXISTS T2
      (AND (EARLIER (WHEN NOT T0) T1) (EARLIER T2 (WHEN NOT T0))
       (LAUGH OFFICER W0 (T1 T2))))
     (EARLIER T0 (WHEN NOT T0))
     (KNOW
      (EXISTS T1 EXISTS T2
       (AND (EARLIER (WHEN NOT T0) T1) (EARLIER T2 (WHEN NOT T0))
        (LAUGH OFFICER W0 (T1 T2))))
      SPEAKER W0 (WHEN NOT T0)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-mesini--di.txt")

* (ccg-deduce '(polis hırsızın konuş -mesini bekle -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-MESINI) := NP\*VP
        : (LAM P (FACT P))
<     (HıRSıZıN KONUŞ)(-MESINI) := NP
        : ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (BEKLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WAIT Y) X)))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
<     (BEKLE)(-DI) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
           (LAM Y (LAM X ((WAIT Y) X))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (BEKLE -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
            (LAM Y (LAM X ((WAIT Y) X)))))
<     (HıRSıZıN KONUŞ -MESINI)(BEKLE -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
             (LAM Y (LAM X ((WAIT Y) X)))))
           ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (POLIS)(HıRSıZıN KONUŞ -MESINI BEKLE -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
              (LAM Y (LAM X ((WAIT Y) X)))))
            ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W0) T))
        ((((KNOW ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W0) T)) SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T) (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W0 T)
      (KNOW (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W0 T) SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-mesini--ebil-di.txt")

* (ccg-deduce '(polis hırsızın konuş -mesini bekle -ebil -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-MESINI) := NP\*VP
        : (LAM P (FACT P))
<     (HıRSıZıN KONUŞ)(-MESINI) := NP
        : ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (BEKLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WAIT Y) X)))
LEX   (-EBIL) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
<     (BEKLE)(-EBIL) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
           (LAM Y (LAM X ((WAIT Y) X))))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
<     (BEKLE -EBIL)(-DI) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
            (LAM Y (LAM X ((WAIT Y) X)))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (BEKLE -EBIL -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    ((((P Y) X) W_POS) T0))))))))
             (LAM Y (LAM X ((WAIT Y) X))))))
<     (HıRSıZıN KONUŞ -MESINI)(BEKLE -EBIL -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS))
                     ((((P Y) X) W_POS) T0))))))))
              (LAM Y (LAM X ((WAIT Y) X))))))
           ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (POLIS)(HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS))
                      ((((P Y) X) W_POS) T0))))))))
               (LAM Y (LAM X ((WAIT Y) X))))))
            ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W0) W_POS))
           ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W_POS) T))))
        ((((KNOW
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W0) W_POS))
              ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W_POS) T))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (EXISTS W_POS
       (AND (POSSIBILITY W0 W_POS)
        (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W_POS T)))
      (KNOW
       (EXISTS W_POS
        (AND (POSSIBILITY W0 W_POS)
         (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W_POS T)))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-mesini--ebil-se--ecek.txt")

* (ccg-deduce '(polis hırsızın konuş -mesini bekle -ebil -se -agr hırsız konuş -ecek -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-MESINI) := NP\*VP
        : (LAM P (FACT P))
<     (HıRSıZıN KONUŞ)(-MESINI) := NP
        : ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (BEKLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WAIT Y) X)))
LEX   (-EBIL) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
<     (BEKLE)(-EBIL) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
           (LAM Y (LAM X ((WAIT Y) X))))
LEX   (-SE) := (((VP/S)\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM S
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
<     (BEKLE -EBIL)(-SE) := ((VP/S)\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM S
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
            (LAM Y (LAM X ((WAIT Y) X)))))
LEX   (-AGR) := (((S/S)\NP)\NP)\*(((VP/S)\NP)\NP)
        : (LAM P (LAM X (LAM Y (LAM S (((P X) Y) S)))))
<     (BEKLE -EBIL -SE)(-AGR) := ((S/S)\NP)\NP
        : ((LAM P (LAM X (LAM Y (LAM S (((P X) Y) S)))))
           ((LAM P
             (LAM X
              (LAM Y
               (LAM S
                (LAM W0
                 (LAM T0
                  ((FORALL W_REF)
                   ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    ((((P Y) X) W_POS) T0))))))))
             (LAM Y (LAM X ((WAIT Y) X))))))
<     (HıRSıZıN KONUŞ -MESINI)(BEKLE -EBIL -SE -AGR) := (S/S)\NP
        : (((LAM P (LAM X (LAM Y (LAM S (((P X) Y) S)))))
            ((LAM P
              (LAM X
               (LAM Y
                (LAM S
                 (LAM W0
                  (LAM T0
                   ((FORALL W_REF)
                    ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS))
                     ((((P Y) X) W_POS) T0))))))))
              (LAM Y (LAM X ((WAIT Y) X))))))
           ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (POLIS)(HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE -AGR) := S/S
        : ((((LAM P (LAM X (LAM Y (LAM S (((P X) Y) S)))))
             ((LAM P
               (LAM X
                (LAM Y
                 (LAM S
                  (LAM W0
                   (LAM T0
                    ((FORALL W_REF)
                     ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS))
                      ((((P Y) X) W_POS) T0))))))))
               (LAM Y (LAM X ((WAIT Y) X))))))
            ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
           POLICEMAN)
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (SPEAK X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -ECEK)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (SPEAK X))))
<     (HıRSıZ)(KONUŞ -ECEK -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (SPEAK X))))
           ROBBER)
>     (POLIS HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE -AGR)(HıRSıZ KONUŞ -ECEK -AGR) := S
        : (((((LAM P (LAM X (LAM Y (LAM S (((P X) Y) S)))))
              ((LAM P
                (LAM X
                 (LAM Y
                  (LAM S
                   (LAM W0
                    (LAM T0
                     ((FORALL W_REF)
                      ((CONDITION ((((P X) Y) W_REF) T0))
                       ((S W_REF) T0)))))))))
               ((LAM P
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS))
                       ((((P Y) X) W_POS) T0))))))))
                (LAM Y (LAM X ((WAIT Y) X))))))
             ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
            POLICEMAN)
           (((LAM P (LAM X (P X)))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (SPEAK X))))
            ROBBER))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W_REF) W_POS))
           ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W_POS) T0))))
        ((EXISTS T) ((AND ((EARLIER T) T0)) (((SPEAK ROBBER) W_REF) T))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS W_POS
       (AND (POSSIBILITY W_REF W_POS)
        (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W_POS T0)))
      (EXISTS T (AND (EARLIER T T0) (SPEAK ROBBER W_REF T)))))

Derivation 2
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-MESINI) := NP\*VP
        : (LAM P (FACT P))
<     (HıRSıZıN KONUŞ)(-MESINI) := NP
        : ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (BEKLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WAIT Y) X)))
LEX   (-EBIL) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
<     (BEKLE)(-EBIL) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
           (LAM Y (LAM X ((WAIT Y) X))))
LEX   (-SE) := (((VP/S)\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM S
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
<     (BEKLE -EBIL)(-SE) := ((VP/S)\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM S
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
            (LAM Y (LAM X ((WAIT Y) X)))))
<     (HıRSıZıN KONUŞ -MESINI)(BEKLE -EBIL -SE) := (VP/S)\NP
        : (((LAM P
             (LAM X
              (LAM Y
               (LAM S
                (LAM W0
                 (LAM T0
                  ((FORALL W_REF)
                   ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    ((((P Y) X) W_POS) T0))))))))
             (LAM Y (LAM X ((WAIT Y) X)))))
           ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
LEX   (-AGR) := ((S/S)\NP)\*((VP/S)\NP)
        : (LAM P (LAM X (LAM S ((P X) S))))
<     (HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE)(-AGR) := (S/S)\NP
        : ((LAM P (LAM X (LAM S ((P X) S))))
           (((LAM P
              (LAM X
               (LAM Y
                (LAM S
                 (LAM W0
                  (LAM T0
                   ((FORALL W_REF)
                    ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS))
                     ((((P Y) X) W_POS) T0))))))))
              (LAM Y (LAM X ((WAIT Y) X)))))
            ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))))
<     (POLIS)(HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE -AGR) := S/S
        : (((LAM P (LAM X (LAM S ((P X) S))))
            (((LAM P
               (LAM X
                (LAM Y
                 (LAM S
                  (LAM W0
                   (LAM T0
                    ((FORALL W_REF)
                     ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS))
                      ((((P Y) X) W_POS) T0))))))))
               (LAM Y (LAM X ((WAIT Y) X)))))
             ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))))
           POLICEMAN)
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (SPEAK X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -ECEK)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (SPEAK X))))
<     (HıRSıZ)(KONUŞ -ECEK -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (SPEAK X))))
           ROBBER)
>     (POLIS HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE -AGR)(HıRSıZ KONUŞ -ECEK -AGR) := S
        : ((((LAM P (LAM X (LAM S ((P X) S))))
             (((LAM P
                (LAM X
                 (LAM Y
                  (LAM S
                   (LAM W0
                    (LAM T0
                     ((FORALL W_REF)
                      ((CONDITION ((((P X) Y) W_REF) T0))
                       ((S W_REF) T0)))))))))
               ((LAM P
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS))
                       ((((P Y) X) W_POS) T0))))))))
                (LAM Y (LAM X ((WAIT Y) X)))))
              ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))))
            POLICEMAN)
           (((LAM P (LAM X (P X)))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (SPEAK X))))
            ROBBER))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W_REF) W_POS))
           ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W_POS) T0))))
        ((EXISTS T) ((AND ((EARLIER T) T0)) (((SPEAK ROBBER) W_REF) T))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS W_POS
       (AND (POSSIBILITY W_REF W_POS)
        (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W_POS T0)))
      (EXISTS T (AND (EARLIER T T0) (SPEAK ROBBER W_REF T)))))

Derivation 3
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-MESINI) := NP\*VP
        : (LAM P (FACT P))
<     (HıRSıZıN KONUŞ)(-MESINI) := NP
        : ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (BEKLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WAIT Y) X)))
LEX   (-EBIL) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
<     (BEKLE)(-EBIL) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
           (LAM Y (LAM X ((WAIT Y) X))))
LEX   (-SE) := (((VP/S)\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM X
            (LAM Y
             (LAM S
              (LAM W0
               (LAM T0
                ((FORALL W_REF)
                 ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
<     (BEKLE -EBIL)(-SE) := ((VP/S)\NP)\NP
        : ((LAM P
            (LAM X
             (LAM Y
              (LAM S
               (LAM W0
                (LAM T0
                 ((FORALL W_REF)
                  ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
            (LAM Y (LAM X ((WAIT Y) X)))))
<     (HıRSıZıN KONUŞ -MESINI)(BEKLE -EBIL -SE) := (VP/S)\NP
        : (((LAM P
             (LAM X
              (LAM Y
               (LAM S
                (LAM W0
                 (LAM T0
                  ((FORALL W_REF)
                   ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    ((((P Y) X) W_POS) T0))))))))
             (LAM Y (LAM X ((WAIT Y) X)))))
           ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (POLIS)(HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE) := VP/S
        : ((((LAM P
              (LAM X
               (LAM Y
                (LAM S
                 (LAM W0
                  (LAM T0
                   ((FORALL W_REF)
                    ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS))
                     ((((P Y) X) W_POS) T0))))))))
              (LAM Y (LAM X ((WAIT Y) X)))))
            ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
           POLICEMAN)
LEX   (-AGR) := (S/S)\*(VP/S)
        : (LAM P (LAM S (P S)))
<     (POLIS HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE)(-AGR) := S/S
        : ((LAM P (LAM S (P S)))
           ((((LAM P
               (LAM X
                (LAM Y
                 (LAM S
                  (LAM W0
                   (LAM T0
                    ((FORALL W_REF)
                     ((CONDITION ((((P X) Y) W_REF) T0)) ((S W_REF) T0)))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS))
                      ((((P Y) X) W_POS) T0))))))))
               (LAM Y (LAM X ((WAIT Y) X)))))
             ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
            POLICEMAN))
LEX   (HıRSıZ) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-ECEK) := (VP\NP)\\(VP\NP)
        : (LAM P
           (LAM X
            (LAM W0
             (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
<     (KONUŞ)(-ECEK) := VP\NP
        : ((LAM P
            (LAM X
             (LAM W0
              (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
           (LAM X (SPEAK X)))
LEX   (-AGR) := (S\NP)\\(VP\NP)
        : (LAM P (LAM X (P X)))
<     (KONUŞ -ECEK)(-AGR) := S\NP
        : ((LAM P (LAM X (P X)))
           ((LAM P
             (LAM X
              (LAM W0
               (LAM T0 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
            (LAM X (SPEAK X))))
<     (HıRSıZ)(KONUŞ -ECEK -AGR) := S
        : (((LAM P (LAM X (P X)))
            ((LAM P
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
             (LAM X (SPEAK X))))
           ROBBER)
>     (POLIS HıRSıZıN KONUŞ -MESINI BEKLE -EBIL -SE -AGR)(HıRSıZ KONUŞ -ECEK -AGR) := S
        : (((LAM P (LAM S (P S)))
            ((((LAM P
                (LAM X
                 (LAM Y
                  (LAM S
                   (LAM W0
                    (LAM T0
                     ((FORALL W_REF)
                      ((CONDITION ((((P X) Y) W_REF) T0))
                       ((S W_REF) T0)))))))))
               ((LAM P
                 (LAM Y
                  (LAM X
                   (LAM W0
                    (LAM T0
                     ((EXISTS W_POS)
                      ((AND ((POSSIBILITY W0) W_POS))
                       ((((P Y) X) W_POS) T0))))))))
                (LAM Y (LAM X ((WAIT Y) X)))))
              ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
             POLICEMAN))
           (((LAM P (LAM X (P X)))
             ((LAM P
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T) ((AND ((EARLIER T) T0)) (((P X) W0) T)))))))
              (LAM X (SPEAK X))))
            ROBBER))

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((FORALL W_REF)
       ((CONDITION
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W_REF) W_POS))
           ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W_POS) T0))))
        ((EXISTS T) ((AND ((EARLIER T) T0)) (((SPEAK ROBBER) W_REF) T))))))) =
    (\ W0 . \ T0 . FORALL W_REF
     (CONDITION
      (EXISTS W_POS
       (AND (POSSIBILITY W_REF W_POS)
        (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W_POS T0)))
      (EXISTS T (AND (EARLIER T T0) (SPEAK ROBBER W_REF T)))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-mesini--eme-di.txt")

* (ccg-deduce '(polis hırsızın konuş -mesini bekle -eme -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-MESINI) := NP\*VP
        : (LAM P (FACT P))
<     (HıRSıZıN KONUŞ)(-MESINI) := NP
        : ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (BEKLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WAIT Y) X)))
LEX   (-EME) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               (NOT
                ((EXISTS W_POS)
                 ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
<     (BEKLE)(-EME) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                (NOT
                 ((EXISTS W_POS)
                  ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
           (LAM Y (LAM X ((WAIT Y) X))))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
<     (BEKLE -EME)(-DI) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 (NOT
                  ((EXISTS W_POS)
                   ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
            (LAM Y (LAM X ((WAIT Y) X)))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (BEKLE -EME -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  (NOT
                   ((EXISTS W_POS)
                    ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
             (LAM Y (LAM X ((WAIT Y) X))))))
<     (HıRSıZıN KONUŞ -MESINI)(BEKLE -EME -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   (NOT
                    ((EXISTS W_POS)
                     ((AND ((ABILITY W0) W_POS)) ((((P Y) X) W_POS) T0)))))))))
              (LAM Y (LAM X ((WAIT Y) X))))))
           ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (POLIS)(HıRSıZıN KONUŞ -MESINI BEKLE -EME -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    (NOT
                     ((EXISTS W_POS)
                      ((AND ((ABILITY W0) W_POS))
                       ((((P Y) X) W_POS) T0)))))))))
               (LAM Y (LAM X ((WAIT Y) X))))))
            ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         (NOT
          ((EXISTS W_POS)
           ((AND ((ABILITY W0) W_POS))
            ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W_POS) T)))))
        ((((KNOW
            (NOT
             ((EXISTS W_POS)
              ((AND ((ABILITY W0) W_POS))
               ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W_POS) T)))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (NOT
       (EXISTS W_POS
        (AND (ABILITY W0 W_POS)
         (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W_POS T))))
      (KNOW
       (NOT
        (EXISTS W_POS
         (AND (ABILITY W0 W_POS)
          (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W_POS T))))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* (dribble "66-mesini--me-di.txt")

* (ccg-deduce '(polis hırsızın konuş -mesini bekle -me -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZıN) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
<     (HıRSıZıN)(KONUŞ) := VP
        : ((LAM X (SPEAK X)) ROBBER)
LEX   (-MESINI) := NP\*VP
        : (LAM P (FACT P))
<     (HıRSıZıN KONUŞ)(-MESINI) := NP
        : ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER))
LEX   (BEKLE) := (VP\NP)\NP
        : (LAM Y (LAM X ((WAIT Y) X)))
LEX   (-ME) := (((VP\NP)\NP)\\((VP\NP)\NP))/*(((VP\NP)\NP)\\((VP\NP)\NP))
        : (LAM N
           (LAM P
            (LAM Y (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
>     (-ME)(-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : ((LAM N
            (LAM P
             (LAM Y (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
           (LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
<     (BEKLE)(-ME -DI) := (VP\NP)\NP
        : (((LAM N
             (LAM P
              (LAM Y (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
            (LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
           (LAM Y (LAM X ((WAIT Y) X))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (BEKLE -ME -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           (((LAM N
              (LAM P
               (LAM Y
                (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
             (LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
            (LAM Y (LAM X ((WAIT Y) X)))))
<     (HıRSıZıN KONUŞ -MESINI)(BEKLE -ME -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            (((LAM N
               (LAM P
                (LAM Y
                 (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
              (LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
             (LAM Y (LAM X ((WAIT Y) X)))))
           ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
<     (POLIS)(HıRSıZıN KONUŞ -MESINI BEKLE -ME -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             (((LAM N
                (LAM P
                 (LAM Y
                  (LAM X (LAM W0 (LAM T0 (NOT (((((N P) Y) X) W0) T0))))))))
               (LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS T)
                     (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                      ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T)))))))))
              (LAM Y (LAM X ((WAIT Y) X)))))
            ((LAM P (FACT P)) ((LAM X (SPEAK X)) ROBBER)))
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      (NOT
       ((EXISTS T)
        (((AND ((EARLIER T0) T))
          ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W0) T))
         ((((KNOW ((((WAIT (FACT (SPEAK ROBBER))) POLICEMAN) W0) T)) SPEAKER)
           W0)
          T)))))) =
    (\ W0 . \ T0 . NOT
     (EXISTS T
      (AND (EARLIER T0 T) (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W0 T)
       (KNOW (WAIT (FACT (SPEAK ROBBER)) POLICEMAN W0 T) SPEAKER W0 T))))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)

* 