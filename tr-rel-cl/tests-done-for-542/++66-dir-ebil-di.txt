
* (ccg-deduce '(polis hırsızı konuş -dir -ebil -di -agr))

T
* (cky-show-deduction)


Derivation 1
--------------
LEX   (POLIS) := NP
        : POLICEMAN
LEX   (HıRSıZı) := NP
        : ROBBER
LEX   (KONUŞ) := VP\NP
        : (LAM X (SPEAK X))
LEX   (-DIR) := ((VP\NP)\NP)\\(VP\NP)
        : (LAM P
           (LAM A
            (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
<     (KONUŞ)(-DIR) := (VP\NP)\NP
        : ((LAM P
            (LAM A
             (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
           (LAM X (SPEAK X)))
LEX   (-EBIL) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS W_POS)
                ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
<     (KONUŞ -DIR)(-EBIL) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS W_POS)
                 ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
           ((LAM P
             (LAM A
              (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
            (LAM X (SPEAK X))))
LEX   (-DI) := ((VP\NP)\NP)\\((VP\NP)\NP)
        : (LAM P
           (LAM Y
            (LAM X
             (LAM W0
              (LAM T0
               ((EXISTS T)
                (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                 ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
<     (KONUŞ -DIR -EBIL)(-DI) := (VP\NP)\NP
        : ((LAM P
            (LAM Y
             (LAM X
              (LAM W0
               (LAM T0
                ((EXISTS T)
                 (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                  ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS W_POS)
                  ((AND ((POSSIBILITY W0) W_POS)) ((((P Y) X) W_POS) T0))))))))
            ((LAM P
              (LAM A
               (LAM X (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
             (LAM X (SPEAK X)))))
LEX   (-AGR) := ((S\NP)\NP)\\((VP\NP)\NP)
        : (LAM P (LAM X (LAM Y ((P X) Y))))
<     (KONUŞ -DIR -EBIL -DI)(-AGR) := (S\NP)\NP
        : ((LAM P (LAM X (LAM Y ((P X) Y))))
           ((LAM P
             (LAM Y
              (LAM X
               (LAM W0
                (LAM T0
                 ((EXISTS T)
                  (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                   ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS W_POS)
                   ((AND ((POSSIBILITY W0) W_POS))
                    ((((P Y) X) W_POS) T0))))))))
             ((LAM P
               (LAM A
                (LAM X
                 (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
              (LAM X (SPEAK X))))))
<     (HıRSıZı)(KONUŞ -DIR -EBIL -DI -AGR) := S\NP
        : (((LAM P (LAM X (LAM Y ((P X) Y))))
            ((LAM P
              (LAM Y
               (LAM X
                (LAM W0
                 (LAM T0
                  ((EXISTS T)
                   (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                    ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS W_POS)
                    ((AND ((POSSIBILITY W0) W_POS))
                     ((((P Y) X) W_POS) T0))))))))
              ((LAM P
                (LAM A
                 (LAM X
                  (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
               (LAM X (SPEAK X))))))
           ROBBER)
<     (POLIS)(HıRSıZı KONUŞ -DIR -EBIL -DI -AGR) := S
        : ((((LAM P (LAM X (LAM Y ((P X) Y))))
             ((LAM P
               (LAM Y
                (LAM X
                 (LAM W0
                  (LAM T0
                   ((EXISTS T)
                    (((AND ((EARLIER T0) T)) ((((P Y) X) W0) T))
                     ((((KNOW ((((P Y) X) W0) T)) SPEAKER) W0) T))))))))
              ((LAM P
                (LAM Y
                 (LAM X
                  (LAM W0
                   (LAM T0
                    ((EXISTS W_POS)
                     ((AND ((POSSIBILITY W0) W_POS))
                      ((((P Y) X) W_POS) T0))))))))
               ((LAM P
                 (LAM A
                  (LAM X
                   (LAM W0 (LAM T0 ((((INIT (((P A) W0) T0)) X) W0) T0))))))
                (LAM X (SPEAK X))))))
            ROBBER)
           POLICEMAN)

Final LF, normal-order evaluated: 

    (LAM W0
     (LAM T0
      ((EXISTS T)
       (((AND ((EARLIER T0) T))
         ((EXISTS W_POS)
          ((AND ((POSSIBILITY W0) W_POS))
           ((((INIT (((SPEAK ROBBER) W_POS) T)) POLICEMAN) W_POS) T))))
        ((((KNOW
            ((EXISTS W_POS)
             ((AND ((POSSIBILITY W0) W_POS))
              ((((INIT (((SPEAK ROBBER) W_POS) T)) POLICEMAN) W_POS) T))))
           SPEAKER)
          W0)
         T))))) =
    (\ W0 . \ T0 . EXISTS T
     (AND (EARLIER T0 T)
      (EXISTS W_POS
       (AND (POSSIBILITY W0 W_POS)
        (INIT (SPEAK ROBBER W_POS T) POLICEMAN W_POS T)))
      (KNOW
       (EXISTS W_POS
        (AND (POSSIBILITY W0 W_POS)
         (INIT (SPEAK ROBBER W_POS T) POLICEMAN W_POS T)))
       SPEAKER W0 T)))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
* (dribble)
